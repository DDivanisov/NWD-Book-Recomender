{"ast":null,"code":"export default {\n  props: {\n    currentPage: {\n      type: Number,\n      required: true\n    },\n    totalPages: {\n      type: Number,\n      required: true\n    }\n  },\n  data() {\n    return {\n      inputVisible: false,\n      inputPosition: null,\n      inputPage: ''\n    };\n  },\n  computed: {\n    middlePages() {\n      let pages = [];\n      if (this.totalPages <= 3) {\n        pages = Array.from({\n          length: this.totalPages\n        }, (_, i) => i + 1);\n      } else if (this.currentPage > 2 && this.currentPage < this.totalPages - 1) {\n        pages = [this.currentPage - 1, this.currentPage, this.currentPage + 1];\n      } else if (this.currentPage <= 2) {\n        pages = [1, 2, 3];\n      } else {\n        pages = [this.totalPages - 2, this.totalPages - 1, this.totalPages];\n      }\n      return pages;\n    },\n    showLeftDots() {\n      return this.currentPage > 3;\n    },\n    showRightDots() {\n      return this.currentPage < this.totalPages - 2;\n    }\n  },\n  methods: {\n    nextPage() {\n      this.$emit('pageChange', this.currentPage + 1);\n      this.hideInput();\n    },\n    prevPage() {\n      this.$emit('pageChange', this.currentPage - 1);\n      this.hideInput();\n    },\n    changePage(page) {\n      this.$emit('pageChange', page);\n      this.hideInput();\n    },\n    toggleInput(position) {\n      if (this.inputVisible && this.inputPosition === position) {\n        this.hideInput();\n      } else {\n        this.inputVisible = true;\n        this.inputPosition = position;\n        this.inputPage = '';\n        this.$nextTick(() => {\n          const inputRef = position === 'left' ? this.$refs.leftInput : this.$refs.rightInput;\n          if (inputRef) {\n            inputRef.focus();\n          }\n        });\n      }\n    },\n    hideInput() {\n      this.inputVisible = false;\n      this.inputPosition = null;\n    },\n    goToPage() {\n      const page = Number(this.inputPage);\n      if (page >= 1 && page <= this.totalPages) {\n        this.$emit('pageChange', page);\n      }\n      this.hideInput();\n    }\n  }\n};","map":{"version":3,"names":["props","currentPage","type","Number","required","totalPages","data","inputVisible","inputPosition","inputPage","computed","middlePages","pages","Array","from","length","_","i","showLeftDots","showRightDots","methods","nextPage","$emit","hideInput","prevPage","changePage","page","toggleInput","position","$nextTick","inputRef","$refs","leftInput","rightInput","focus","goToPage"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\components\\PrevPageNext.vue"],"sourcesContent":["<template>\r\n  <div class=\"pagination\" v-if=\"totalPages > 1\">\r\n    <button @click=\"prevPage\" :disabled=\"currentPage === 1\">\r\n      <i class=\"lni lni-arrow-left\"></i>\r\n    </button>\r\n    <ul>\r\n      <li @click=\"changePage(1)\" :class=\"{ active: currentPage === 1 }\">1</li>\r\n\r\n      <li v-if=\"showLeftDots\" @click=\"toggleInput('left')\" :class=\"{ dots: true }\">\r\n        <template v-if=\"!inputVisible || inputPosition !== 'left'\">...</template>\r\n        <template v-if=\"inputVisible && inputPosition === 'left'\">\r\n          <div class=\"input-container\">\r\n            <input ref=\"leftInput\" type=\"number\" v-model=\"inputPage\" @keyup.enter=\"goToPage\" @blur=\"hideInput\" min=\"1\" :max=\"totalPages\" />\r\n          </div>\r\n        </template>\r\n      </li>\r\n\r\n      <li v-for=\"page in middlePages\" :key=\"page\" @click=\"changePage(page)\" :class=\"{ active: currentPage === page }\">\r\n        {{ page }}\r\n      </li>\r\n\r\n      <li v-if=\"showRightDots\" @click=\"toggleInput('right')\" :class=\"{ dots: true }\">\r\n        <template v-if=\"!inputVisible || inputPosition !== 'right'\">...</template>\r\n        <template v-if=\"inputVisible && inputPosition === 'right'\">\r\n          <div class=\"input-container\">\r\n            <input ref=\"rightInput\" type=\"number\" v-model=\"inputPage\" @keyup.enter=\"goToPage\" @blur=\"hideInput\" min=\"1\" :max=\"totalPages\" />\r\n          </div>\r\n        </template>\r\n      </li>\r\n\r\n      <li @click=\"changePage(totalPages)\" :class=\"{ active: currentPage === totalPages }\">{{ totalPages }}</li>\r\n    </ul>\r\n\r\n    <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\r\n      <i class=\"lni lni-arrow-right\"></i>\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    currentPage: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    totalPages: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      inputVisible: false,\r\n      inputPosition: null,\r\n      inputPage: '',\r\n    };\r\n  },\r\n  computed: {\r\n    middlePages() {\r\n    let pages = [];\r\n    if (this.totalPages <= 3) {\r\n      pages = Array.from({ length: this.totalPages }, (_, i) => i + 1);\r\n    } else if (this.currentPage > 2 && this.currentPage < this.totalPages - 1) {\r\n      pages = [this.currentPage - 1, this.currentPage, this.currentPage + 1];\r\n    } else if (this.currentPage <= 2) {\r\n      pages = [1, 2, 3];\r\n    } else {\r\n      pages = [this.totalPages - 2, this.totalPages - 1, this.totalPages];\r\n    }\r\n    return pages;\r\n  },\r\n    showLeftDots() {\r\n      return this.currentPage > 3;\r\n    },\r\n    showRightDots() {\r\n      return this.currentPage < this.totalPages - 2;\r\n    },\r\n  },\r\n  methods: {\r\n    nextPage() {\r\n      this.$emit('pageChange', this.currentPage + 1);\r\n      this.hideInput();\r\n    },\r\n    prevPage() {\r\n      this.$emit('pageChange', this.currentPage - 1);\r\n      this.hideInput();\r\n    },\r\n    changePage(page) {\r\n      this.$emit('pageChange', page);\r\n      this.hideInput();\r\n    },\r\n    toggleInput(position) {\r\n      if (this.inputVisible && this.inputPosition === position) {\r\n        this.hideInput();\r\n      } else {\r\n        this.inputVisible = true;\r\n        this.inputPosition = position;\r\n        this.inputPage = '';\r\n        this.$nextTick(() => {\r\n          const inputRef = position === 'left' ? this.$refs.leftInput : this.$refs.rightInput;\r\n          if (inputRef) {\r\n            inputRef.focus();\r\n          }\r\n        });\r\n      }\r\n    },\r\n    hideInput() {\r\n      this.inputVisible = false;\r\n      this.inputPosition = null;\r\n    },\r\n    goToPage() {\r\n      const page = Number(this.inputPage);\r\n      if (page >= 1 && page <= this.totalPages) {\r\n        this.$emit('pageChange', page);\r\n      }\r\n      this.hideInput();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.pagination {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgb(255, 255, 255, 0.5);\r\n  gap: 10px;\r\n  padding: 10px 40px;\r\n  border-radius: 6px;\r\n  margin-top: 0;\r\n  height: 120px;\r\n  position: relative;\r\n}\r\n\r\n.pagination button {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  color: #383838;\r\n  background-color: transparent;\r\n  outline: none;\r\n  border: none;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n}\r\n.pagination button:hover {\r\n  color: blue;\r\n}\r\n\r\nul {\r\n  margin: 20px 30px;\r\n  padding: 0;\r\n  list-style: none;\r\n  position: relative;\r\n}\r\n\r\nul li {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n  background-color: #ccc;\r\n  width: 45px;\r\n  height: 45px;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 45px;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n\r\nul li:hover {\r\n  background-color: #3b7ddd;\r\n}\r\n\r\nli.active {\r\n  background-color: #3b7ddd;\r\n  color: #fff;\r\n}\r\n\r\n.dots {\r\n  cursor: pointer;\r\n  width: 45px;\r\n  height: 45px;\r\n  text-align: center;\r\n  line-height: 45px;\r\n  font-size: 22px;\r\n  position: relative;\r\n}\r\n\r\n.input-container {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 45px;\r\n  height: 45px;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.input-container input {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 0;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  border: 1px solid #ccc;\r\n  border-radius: 50%;\r\n  box-sizing: border-box;\r\n  outline: none;\r\n  -moz-appearance: textfield;\r\n  appearance: textfield;\r\n}\r\n\r\n.input-container input::-webkit-inner-spin-button,\r\n.input-container input::-webkit-outer-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}