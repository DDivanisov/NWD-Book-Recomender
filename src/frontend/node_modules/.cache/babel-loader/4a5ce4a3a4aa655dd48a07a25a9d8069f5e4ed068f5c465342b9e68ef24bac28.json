{"ast":null,"code":"import { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport PrevPageNext from '../components/PrevPageNext.vue';\nimport BooksShow from '../components/BooksShow.vue';\nimport services from '../../services/services.js';\nexport default {\n  components: {\n    PrevPageNext,\n    BooksShow\n  },\n  setup() {\n    const store = useStore();\n    const books = ref([]);\n    const totalBooks = ref(0);\n    const totalPages = ref(0);\n    const loading = ref(true);\n    const limit = 15;\n    const currentPage = computed(() => store.state.currentPage);\n    const getAllBooks = async page => {\n      store.dispatch('setPage', page);\n      loading.value = true;\n      try {\n        const response = await services.getBooks(page, limit);\n        if (response.status !== 200) throw new Error('Network response was not ok');\n        const data = response.data;\n        books.value = data.books;\n        totalBooks.value = data.totalBooks;\n        totalPages.value = data.totalPages;\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(() => {\n      getAllBooks(currentPage.value);\n    });\n    return {\n      books,\n      totalBooks,\n      totalPages,\n      currentPage,\n      loading,\n      getAllBooks\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","useStore","PrevPageNext","BooksShow","services","components","setup","store","books","totalBooks","totalPages","loading","limit","currentPage","state","getAllBooks","page","dispatch","value","response","getBooks","status","Error","data","error","console"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\BooksView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <PrevPageNext\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        @pageChange=\"getAllBooks\"\r\n      />\r\n      <BooksShow\r\n        :books=\"books\"\r\n        :loading=\"loading\"\r\n      />\r\n      <PrevPageNext\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        @pageChange=\"getAllBooks\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { computed, onMounted, ref } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import PrevPageNext from '../components/PrevPageNext.vue';\r\n  import BooksShow from '../components/BooksShow.vue';\r\n  import services from '../../services/services.js';\r\n  \r\n  export default {\r\n    components: {\r\n      PrevPageNext,\r\n      BooksShow\r\n    },\r\n    setup() {\r\n      const store = useStore();\r\n      const books = ref([]);\r\n      const totalBooks = ref(0);\r\n      const totalPages = ref(0);\r\n      const loading = ref(true);\r\n      const limit = 15;\r\n      const currentPage = computed(() => store.state.currentPage);\r\n  \r\n      const getAllBooks = async (page) => {\r\n        store.dispatch('setPage', page);\r\n        loading.value = true;\r\n        try {\r\n          const response = await services.getBooks(page, limit);\r\n          if (response.status !== 200) throw new Error('Network response was not ok');\r\n          const data = response.data;\r\n          books.value = data.books;\r\n          totalBooks.value = data.totalBooks;\r\n          totalPages.value = data.totalPages;\r\n        } catch (error) {\r\n          console.error('Error fetching books:', error);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n  \r\n      onMounted(() => {\r\n        getAllBooks(currentPage.value);\r\n      });\r\n  \r\n      return {\r\n        books,\r\n        totalBooks,\r\n        totalPages,\r\n        currentPage,\r\n        loading,\r\n        getAllBooks\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  </style>\r\n  "],"mappings":"AAoBE,SAASA,QAAQ,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AAC9C,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,YAAW,MAAO,gCAAgC;AACzD,OAAOC,SAAQ,MAAO,6BAA6B;AACnD,OAAOC,QAAO,MAAO,4BAA4B;AAEjD,eAAe;EACbC,UAAU,EAAE;IACVH,YAAY;IACZC;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,QAAQ,CAAC,CAAC;IACxB,MAAMO,KAAI,GAAIR,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMS,UAAS,GAAIT,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMU,UAAS,GAAIV,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMW,OAAM,GAAIX,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMY,KAAI,GAAI,EAAE;IAChB,MAAMC,WAAU,GAAIf,QAAQ,CAAC,MAAMS,KAAK,CAACO,KAAK,CAACD,WAAW,CAAC;IAE3D,MAAME,WAAU,GAAI,MAAOC,IAAI,IAAK;MAClCT,KAAK,CAACU,QAAQ,CAAC,SAAS,EAAED,IAAI,CAAC;MAC/BL,OAAO,CAACO,KAAI,GAAI,IAAI;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMf,QAAQ,CAACgB,QAAQ,CAACJ,IAAI,EAAEJ,KAAK,CAAC;QACrD,IAAIO,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAC3E,MAAMC,IAAG,GAAIJ,QAAQ,CAACI,IAAI;QAC1Bf,KAAK,CAACU,KAAI,GAAIK,IAAI,CAACf,KAAK;QACxBC,UAAU,CAACS,KAAI,GAAIK,IAAI,CAACd,UAAU;QAClCC,UAAU,CAACQ,KAAI,GAAIK,IAAI,CAACb,UAAU;MACpC,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,UAAU;QACRb,OAAO,CAACO,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAEDnB,SAAS,CAAC,MAAM;MACdgB,WAAW,CAACF,WAAW,CAACK,KAAK,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO;MACLV,KAAK;MACLC,UAAU;MACVC,UAAU;MACVG,WAAW;MACXF,OAAO;MACPI;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}