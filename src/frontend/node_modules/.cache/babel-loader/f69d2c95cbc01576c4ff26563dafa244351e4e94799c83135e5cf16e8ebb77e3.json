{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-793ffd37\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"genre-selection\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Select Your Favorite Genres\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0,\n  class: \"genres\"\n};\nconst _hoisted_4 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $setup.selectedGenres ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.genres, (genre, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass(['genre', {\n        selected: $setup.selectedGenres.includes(genre)\n      }]),\n      onClick: $event => $setup.toggleGenre(genre)\n    }, _toDisplayString(genre), 11 /* TEXT, CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.submitGenres && $setup.submitGenres(...args)),\n    class: \"submit-btn\"\n  }, \"Submit\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","$setup","selectedGenres","_hoisted_3","_Fragment","_renderList","genres","genre","index","_normalizeClass","selected","includes","onClick","$event","toggleGenre","_hoisted_4","_createCommentVNode","_cache","args","submitGenres"],"sources":["C:\\Users\\mynig\\VScodium\\NWD-Book-Recomender\\src\\frontend\\src\\views\\GenresULikeView.vue"],"sourcesContent":["<template>\r\n    <div class=\"genre-selection\">\r\n      <h2>Select Your Favorite Genres</h2>\r\n      <div class=\"genres\" v-if=\"selectedGenres\">\r\n        <div \r\n          v-for=\"(genre, index) in genres\" \r\n          :key=\"index\" \r\n          :class=\"['genre', { selected: selectedGenres.includes(genre) }]\" \r\n          @click=\"toggleGenre(genre)\"\r\n        >\r\n          {{ genre }}\r\n        </div>\r\n      </div>\r\n      <button @click=\"submitGenres\" class=\"submit-btn\">Submit</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport services from '../../services/services';\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const genres = ref([\r\n      'Fiction', 'Fantasy', 'Science Fiction', 'Mystery', 'Thriller', \r\n      'Romance', 'Historical', 'Non-Fiction', 'Biography', 'Self-Help', \r\n      'Horror', 'Adventure', 'Comedy', 'Drama'\r\n    ]);\r\n    const user = computed(() => store.state.user); \r\n    const selectedGenres = ref([]);\r\n\r\n    const fetchSelectedGenres = async () => {\r\n      try {\r\n        const response = await services.getGenres(user.value._id);\r\n        selectedGenres.value = response.data.genres || [];\r\n      } catch (error) {\r\n        console.error('Error fetching selected genres:', error);\r\n      }\r\n    };\r\n\r\n    const toggleGenre = (genre) => {\r\n      if (selectedGenres.value.includes(genre)) {\r\n        removeGenre(genre);\r\n      } else {\r\n        selectedGenres.value.push(genre);\r\n      }\r\n    };\r\n\r\n    const removeGenre = async (genre) => {\r\n      selectedGenres.value = selectedGenres.value.filter(g => g !== genre);\r\n    };\r\n\r\n    const submitGenres = async () => {\r\n      try {\r\n        await updateGenres(selectedGenres.value);\r\n        alert('Genres submitted successfully!');\r\n      } catch (error) {\r\n        console.error('Error submitting genres:', error);\r\n      }\r\n    };\r\n\r\n    const updateGenres = async (genres) => {\r\n      try {\r\n        await services.addLikedGenres({ \r\n          user_id: user.value._id,\r\n          genres\r\n        });\r\n      } catch (error) {\r\n        console.error('Error updating genres:', error);\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchSelectedGenres();\r\n    });\r\n\r\n    return {\r\n      genres,\r\n      selectedGenres,\r\n      toggleGenre,\r\n      removeGenre,\r\n      submitGenres\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .genre-selection {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    background-color: rgb(250, 250, 250, 0.7);\r\n    margin-top: 7%;\r\n    margin-left: 7%;\r\n    max-width: 80%;\r\n    max-height: 70vh;\r\n    h2 {\r\n      margin-bottom: 20px;\r\n    }\r\n  \r\n    .genres {\r\n      display: grid;\r\n      grid-template-columns: repeat(3, 1fr);\r\n      gap: 10px;\r\n      width: 100%;\r\n      max-width: 600px;\r\n      margin-bottom: 20px;\r\n    }\r\n  \r\n    .genre {\r\n      padding: 10px;\r\n      min-height: 50px;\r\n      max-height: 100px;\r\n      background-color: #f5f5f5;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n      text-align: center;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s, border-color 0.3s;\r\n      position: relative;\r\n      \r\n      &.selected {\r\n        background-color: #4caf50;\r\n        color: white;\r\n        border-color: #388e3c;\r\n      }\r\n    }\r\n  \r\n    .submit-btn {\r\n      padding: 10px 20px;\r\n      background-color: #4caf50;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s;\r\n  \r\n      &:hover {\r\n        background-color: #388e3c;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAiB;gEAC1BC,mBAAA,CAAoC,YAAhC,6BAA2B;;EAFrCC,GAAA;EAGWF,KAAK,EAAC;;mBAHjB;;uBACIG,mBAAA,CAaM,OAbNC,UAaM,GAZJC,UAAoC,EACVC,MAAA,CAAAC,cAAc,I,cAAxCJ,mBAAA,CASM,OATNK,UASM,I,kBARJL,mBAAA,CAOMM,SAAA,QAXdC,WAAA,CAKmCJ,MAAA,CAAAK,MAAM,EALzC,CAKkBC,KAAK,EAAEC,KAAK;yBADtBV,mBAAA,CAOM;MALHD,GAAG,EAAEW,KAAK;MACVb,KAAK,EAPhBc,eAAA;QAAAC,QAAA,EAOwCT,MAAA,CAAAC,cAAc,CAACS,QAAQ,CAACJ,KAAK;MAAA;MAC1DK,OAAK,EAAAC,MAAA,IAAEZ,MAAA,CAAAa,WAAW,CAACP,KAAK;wBAEtBA,KAAK,gCAVlBQ,UAAA;sCAAAC,mBAAA,gBAaMpB,mBAAA,CAAgE;IAAvDgB,OAAK,EAAAK,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEjB,MAAA,CAAAkB,YAAA,IAAAlB,MAAA,CAAAkB,YAAA,IAAAD,IAAA,CAAY;IAAEvB,KAAK,EAAC;KAAa,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}