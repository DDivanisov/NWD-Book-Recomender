{"ast":null,"code":"import { computed, onMounted, ref } from 'vue';\nimport { useStore } from 'vuex';\nimport PrevPageNext from '../components/PrevPageNext.vue';\nimport BooksShow from '../components/BooksShow.vue';\nimport FilterTab from '@/components/FilterTab.vue';\nimport services from '../../services/services.js';\nexport default {\n  components: {\n    PrevPageNext,\n    BooksShow,\n    FilterTab\n  },\n  setup() {\n    const store = useStore();\n    const books = ref([]);\n    const totalBooks = ref(0);\n    const totalPages = ref(0);\n    const loading = ref(true);\n    const limit = 15;\n    const currentPage = computed(() => store.state.currentPage);\n    const getAllBooks = async (page, genre = null) => {\n      store.dispatch('setPage', page);\n      console.log(genre);\n      loading.value = true;\n      try {\n        const response = await services.getBooks(page, limit, genre);\n        if (response.status !== 200) throw new Error('Network response was not ok');\n        const data = response.data;\n        books.value = data.books;\n        totalBooks.value = data.totalBooks;\n        totalPages.value = data.totalPages;\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const filterBooksByGenre = genre => {\n      getAllBooks(1, genre);\n    };\n    onMounted(() => {\n      getAllBooks(currentPage.value);\n    });\n    return {\n      books,\n      totalBooks,\n      totalPages,\n      currentPage,\n      loading,\n      getAllBooks,\n      filterBooksByGenre\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","useStore","PrevPageNext","BooksShow","FilterTab","services","components","setup","store","books","totalBooks","totalPages","loading","limit","currentPage","state","getAllBooks","page","genre","dispatch","console","log","value","response","getBooks","status","Error","data","error","filterBooksByGenre"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\BooksView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <FilterTab @genreSelected=\"filterBooksByGenre\" />\r\n    <BooksShow\r\n      :books=\"books\"\r\n      :loading=\"loading\"\r\n      :page=\"currentPage\"\r\n    />\r\n    <PrevPageNext\r\n      :currentPage=\"currentPage\"\r\n      :totalPages=\"totalPages\"\r\n      @pageChange=\"getAllBooks\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport PrevPageNext from '../components/PrevPageNext.vue';\r\nimport BooksShow from '../components/BooksShow.vue';\r\nimport FilterTab from '@/components/FilterTab.vue';\r\nimport services from '../../services/services.js';\r\n\r\nexport default {\r\n  components: {\r\n    PrevPageNext,\r\n    BooksShow,\r\n    FilterTab\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const books = ref([]);\r\n    const totalBooks = ref(0);\r\n    const totalPages = ref(0);\r\n    const loading = ref(true);\r\n    const limit = 15;\r\n    const currentPage = computed(() => store.state.currentPage);\r\n\r\n    const getAllBooks = async (page, genre = null) => {\r\n      store.dispatch('setPage', page);\r\n      console.log(genre);\r\n      loading.value = true;\r\n      try {\r\n        const response = await services.getBooks(page, limit, genre);\r\n        if (response.status !== 200) throw new Error('Network response was not ok');\r\n        const data = response.data;\r\n        books.value = data.books;\r\n        totalBooks.value = data.totalBooks;\r\n        totalPages.value = data.totalPages;\r\n      } catch (error) {\r\n        console.error('Error fetching books:', error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    const filterBooksByGenre = (genre) => {\r\n      getAllBooks(1, genre);\r\n    };\r\n\r\n    onMounted(() => {\r\n      getAllBooks(currentPage.value);\r\n    });\r\n\r\n    return {\r\n      books,\r\n      totalBooks,\r\n      totalPages,\r\n      currentPage,\r\n      loading,\r\n      getAllBooks,\r\n      filterBooksByGenre,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n</style>\r\n"],"mappings":"AAiBA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AAC9C,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,YAAW,MAAO,gCAAgC;AACzD,OAAOC,SAAQ,MAAO,6BAA6B;AACnD,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,QAAO,MAAO,4BAA4B;AAEjD,eAAe;EACbC,UAAU,EAAE;IACVJ,YAAY;IACZC,SAAS;IACTC;EACF,CAAC;EACDG,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,KAAI,GAAIT,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMU,UAAS,GAAIV,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMW,UAAS,GAAIX,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMY,OAAM,GAAIZ,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMa,KAAI,GAAI,EAAE;IAChB,MAAMC,WAAU,GAAIhB,QAAQ,CAAC,MAAMU,KAAK,CAACO,KAAK,CAACD,WAAW,CAAC;IAE3D,MAAME,WAAU,GAAI,MAAAA,CAAOC,IAAI,EAAEC,KAAI,GAAI,IAAI,KAAK;MAChDV,KAAK,CAACW,QAAQ,CAAC,SAAS,EAAEF,IAAI,CAAC;MAC/BG,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MAClBN,OAAO,CAACU,KAAI,GAAI,IAAI;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMlB,QAAQ,CAACmB,QAAQ,CAACP,IAAI,EAAEJ,KAAK,EAAEK,KAAK,CAAC;QAC5D,IAAIK,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAC3E,MAAMC,IAAG,GAAIJ,QAAQ,CAACI,IAAI;QAC1BlB,KAAK,CAACa,KAAI,GAAIK,IAAI,CAAClB,KAAK;QACxBC,UAAU,CAACY,KAAI,GAAIK,IAAI,CAACjB,UAAU;QAClCC,UAAU,CAACW,KAAI,GAAIK,IAAI,CAAChB,UAAU;MACpC,EAAE,OAAOiB,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,UAAU;QACRhB,OAAO,CAACU,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAED,MAAMO,kBAAiB,GAAKX,KAAK,IAAK;MACpCF,WAAW,CAAC,CAAC,EAAEE,KAAK,CAAC;IACvB,CAAC;IAEDnB,SAAS,CAAC,MAAM;MACdiB,WAAW,CAACF,WAAW,CAACQ,KAAK,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO;MACLb,KAAK;MACLC,UAAU;MACVC,UAAU;MACVG,WAAW;MACXF,OAAO;MACPI,WAAW;MACXa;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}