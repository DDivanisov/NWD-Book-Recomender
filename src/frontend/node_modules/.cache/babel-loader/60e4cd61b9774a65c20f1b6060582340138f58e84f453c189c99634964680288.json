{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, onMounted, ref } from 'vue';\nimport services from '../../services/services.js';\nimport { useStore } from 'vuex';\nimport env from '../../../env.js';\nexport default {\n  setup() {\n    const store = useStore();\n    const books = ref([]);\n    const loading = ref(true);\n    const user = computed(() => store.state.user);\n    const getRecommendations = async () => {\n      loading.value = true;\n      try {\n        const bmks = await services.getBookmarks(1, 15, user.value._id);\n        const lkG = await services.getGenres(user.value._id);\n        const bmk = bmks.data.books.map(book => `${book.title} - ${book.author}`);\n        const genres = lkG.data.genres;\n        const response = await services.getRecomended({\n          bookmarks: bmk,\n          likedGenres: genres\n        });\n        const data = response.data;\n        const recommendedBooks = data.recommendedBooks;\n        const booksWithImages = [];\n        for (let i = 0; i < recommendedBooks.length; i++) {\n          const book = recommendedBooks[i];\n          const googleBooksUrl = `https://www.googleapis.com/books/v1/volumes?q=intitle:${encodeURIComponent(book.title)}+inauthor:${encodeURIComponent(book.author)}&key=${env.googleApiKey}`;\n          const res = await fetch(googleBooksUrl);\n          const googleData = await res.json();\n          const itemWithImage = null;\n          if (googleData.items.length > 0) {\n            for (const item of googleData.items) {\n              if (item.volumeInfo.imageLinks && item.volumeInfo.imageLinks.thumbnail) {\n                itemWithImage = item;\n                break;\n              }\n            }\n          }\n          if (itemWithImage) {\n            booksWithImages.push({\n              title: book.title,\n              author: book.author,\n              description: book.description,\n              picture_link: itemWithImage.volumeInfo.imageLinks.thumbnail,\n              page_count: itemWithImage.volumeInfo.pageCount || 'N/A'\n            });\n          }\n        }\n        books.value = booksWithImages;\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(() => {\n      getRecommendations();\n    });\n    return {\n      books,\n      loading\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","services","useStore","env","setup","store","books","loading","user","state","getRecommendations","value","bmks","getBookmarks","_id","lkG","getGenres","bmk","data","map","book","title","author","genres","response","getRecomended","bookmarks","likedGenres","recommendedBooks","booksWithImages","i","length","googleBooksUrl","encodeURIComponent","googleApiKey","res","fetch","googleData","json","itemWithImage","items","item","volumeInfo","imageLinks","thumbnail","push","description","picture_link","page_count","pageCount","error","console"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\RecomendedBooksView.vue"],"sourcesContent":["<template>\r\n    <div class=\"container py-5\">\r\n        <div v-if=\"loading\" class=\"spinner\">Loading...</div>\r\n        <div class=\"row row-cols-1 row-cols-md-3 g-4 py-5\" v-else>\r\n            <div class=\"col\" v-for=\"item in books\" :key=\"item._id\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-img\">\r\n                      <img :src=\"item.picture_link\" class=\"card-img-top\" alt=\"...\">\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <h5 class=\"card-title\">{{ item.title }}</h5>\r\n                        <p class=\"card-text\">{{ item.description }}</p>\r\n                    </div>\r\n                    <div class=\"mb-5 justify-content-around\">\r\n                      <div>\r\n                        <h4><i class=\"lni lni-pencil\"></i>{{ item.author }}</h4>\r\n                      </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, ref } from 'vue';\r\nimport services from '../../services/services.js';\r\nimport { useStore } from 'vuex';\r\nimport env from '../../../env.js'\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const books = ref([]);\r\n    const loading = ref(true);\r\n    const user = computed(() => store.state.user);\r\n\r\n    const getRecommendations = async () => {\r\n        loading.value = true;\r\n\r\n        try {\r\n            const bmks = await services.getBookmarks(1, 15, user.value._id);\r\n            const lkG = await services.getGenres(user.value._id);\r\n\r\n            const bmk = bmks.data.books.map(book => `${book.title} - ${book.author}`);\r\n            const genres = lkG.data.genres;\r\n\r\n            const response = await services.getRecomended({\r\n                bookmarks: bmk,\r\n                likedGenres: genres\r\n            });\r\n            const data = response.data;\r\n            const recommendedBooks = data.recommendedBooks;\r\n\r\n            const booksWithImages = [];\r\n\r\n            for (let i = 0; i < recommendedBooks.length; i++) {\r\n                const book = recommendedBooks[i];\r\n                const googleBooksUrl = `https://www.googleapis.com/books/v1/volumes?q=intitle:${encodeURIComponent(book.title)}+inauthor:${encodeURIComponent(book.author)}&key=${env.googleApiKey}`;\r\n                const res = await fetch(googleBooksUrl);\r\n                const googleData = await res.json();\r\n                const itemWithImage = null;\r\n                if (googleData.items.length > 0) {\r\n                    for (const item of googleData.items) {\r\n                        if (item.volumeInfo.imageLinks && item.volumeInfo.imageLinks.thumbnail) {\r\n                            itemWithImage = item;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (itemWithImage) {\r\n                    booksWithImages.push({\r\n                        title: book.title,\r\n                        author: book.author,\r\n                        description: book.description,\r\n                        picture_link: itemWithImage.volumeInfo.imageLinks.thumbnail,\r\n                        page_count: itemWithImage.volumeInfo.pageCount || 'N/A'\r\n                    });\r\n                }\r\n            }\r\n\r\n            books.value = booksWithImages;\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching books:', error);\r\n        } finally {\r\n            loading.value = false;\r\n        }\r\n    };\r\n\r\n    onMounted(() => {\r\n        getRecommendations();\r\n    });\r\n\r\n    return {\r\n        books,\r\n        loading,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style  scoped lang=\"scss\">\r\n  *{\r\n    padding: 0;\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n}\r\n.card-img-top{\r\n    border-radius: 50px;\r\n    height: 300px;\r\n    width: 300px; \r\n    padding: 20px;\r\n}\r\n.card-img{\r\n  align-items: center;\r\n}\r\n.card{\r\n    border-radius: 30px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 1px 2px 0px;\r\n}\r\n.card-text {\r\n  max-height: 200px;  \r\n}\r\n.card-body{\r\n    padding: 25px;\r\n    margin-top: -15px;\r\n}\r\n</style>"],"mappings":";AAyBA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AAC9C,OAAOC,QAAO,MAAO,4BAA4B;AACjD,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,GAAE,MAAO,iBAAgB;AAEhC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMO,OAAM,GAAIP,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMQ,IAAG,GAAIV,QAAQ,CAAC,MAAMO,KAAK,CAACI,KAAK,CAACD,IAAI,CAAC;IAE7C,MAAME,kBAAiB,GAAI,MAAAA,CAAA,KAAY;MACnCH,OAAO,CAACI,KAAI,GAAI,IAAI;MAEpB,IAAI;QACA,MAAMC,IAAG,GAAI,MAAMX,QAAQ,CAACY,YAAY,CAAC,CAAC,EAAE,EAAE,EAAEL,IAAI,CAACG,KAAK,CAACG,GAAG,CAAC;QAC/D,MAAMC,GAAE,GAAI,MAAMd,QAAQ,CAACe,SAAS,CAACR,IAAI,CAACG,KAAK,CAACG,GAAG,CAAC;QAEpD,MAAMG,GAAE,GAAIL,IAAI,CAACM,IAAI,CAACZ,KAAK,CAACa,GAAG,CAACC,IAAG,IAAK,GAAGA,IAAI,CAACC,KAAK,MAAMD,IAAI,CAACE,MAAM,EAAE,CAAC;QACzE,MAAMC,MAAK,GAAIR,GAAG,CAACG,IAAI,CAACK,MAAM;QAE9B,MAAMC,QAAO,GAAI,MAAMvB,QAAQ,CAACwB,aAAa,CAAC;UAC1CC,SAAS,EAAET,GAAG;UACdU,WAAW,EAAEJ;QACjB,CAAC,CAAC;QACF,MAAML,IAAG,GAAIM,QAAQ,CAACN,IAAI;QAC1B,MAAMU,gBAAe,GAAIV,IAAI,CAACU,gBAAgB;QAE9C,MAAMC,eAAc,GAAI,EAAE;QAE1B,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIF,gBAAgB,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;UAC9C,MAAMV,IAAG,GAAIQ,gBAAgB,CAACE,CAAC,CAAC;UAChC,MAAME,cAAa,GAAI,yDAAyDC,kBAAkB,CAACb,IAAI,CAACC,KAAK,CAAC,aAAaY,kBAAkB,CAACb,IAAI,CAACE,MAAM,CAAC,QAAQnB,GAAG,CAAC+B,YAAY,EAAE;UACpL,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAACJ,cAAc,CAAC;UACvC,MAAMK,UAAS,GAAI,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;UACnC,MAAMC,aAAY,GAAI,IAAI;UAC1B,IAAIF,UAAU,CAACG,KAAK,CAACT,MAAK,GAAI,CAAC,EAAE;YAC7B,KAAK,MAAMU,IAAG,IAAKJ,UAAU,CAACG,KAAK,EAAE;cACjC,IAAIC,IAAI,CAACC,UAAU,CAACC,UAAS,IAAKF,IAAI,CAACC,UAAU,CAACC,UAAU,CAACC,SAAS,EAAE;gBACpEL,aAAY,GAAIE,IAAI;gBACpB;cACJ;YACJ;UACJ;UAEA,IAAIF,aAAa,EAAE;YACfV,eAAe,CAACgB,IAAI,CAAC;cACjBxB,KAAK,EAAED,IAAI,CAACC,KAAK;cACjBC,MAAM,EAAEF,IAAI,CAACE,MAAM;cACnBwB,WAAW,EAAE1B,IAAI,CAAC0B,WAAW;cAC7BC,YAAY,EAAER,aAAa,CAACG,UAAU,CAACC,UAAU,CAACC,SAAS;cAC3DI,UAAU,EAAET,aAAa,CAACG,UAAU,CAACO,SAAQ,IAAK;YACtD,CAAC,CAAC;UACN;QACJ;QAEA3C,KAAK,CAACK,KAAI,GAAIkB,eAAe;MAEjC,EAAE,OAAOqB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,UAAU;QACN3C,OAAO,CAACI,KAAI,GAAI,KAAK;MACzB;IACJ,CAAC;IAEDZ,SAAS,CAAC,MAAM;MACZW,kBAAkB,CAAC,CAAC;IACxB,CAAC,CAAC;IAEF,OAAO;MACHJ,KAAK;MACLC;IACJ,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}