{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store/index';\nimport HomeView from '../views/HomeView.vue';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: HomeView\n}, {\n  path: '/books',\n  name: 'books',\n  component: () => import('../views/BooksView.vue')\n}, {\n  path: '/book/:book_id',\n  name: 'book',\n  component: () => import('../views/BookView.vue')\n}, {\n  path: '/register',\n  name: 'register',\n  component: () => import('../views/RegisterView.vue')\n}, {\n  path: '/login',\n  name: 'login',\n  component: () => import('../views/LoginView.vue')\n}, {\n  path: '/recomendBooks',\n  name: 'recomendBooks',\n  component: () => import('../views/RecomendToAddView.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/toaddbooks',\n  name: 'toaddbooks',\n  component: () => import('../views/AcceptBooksView.vue'),\n  meta: {\n    requiresAuth: true,\n    requiresRole: 'adminDarko'\n  }\n}, {\n  path: '/bookmarks',\n  name: 'bookmarks',\n  component: () => import('../views/LikedBooksView.vue'),\n  meta: {\n    requiresAuth: true\n  }\n}, {\n  path: '/:catchAll(.*)',\n  redirect: '/'\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = store.getters.isUserLogedIn;\n  const user = store.getters.user;\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isLoggedIn) {\n      next({\n        name: 'login'\n      });\n    } else if (to.matched.some(record => record.meta.requiresRole) && (!user || user.username !== 'adminDarko')) {\n      next({\n        name: 'home'\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","HomeView","routes","path","name","component","meta","requiresAuth","requiresRole","redirect","router","history","process","env","BASE_URL","beforeEach","to","from","next","isLoggedIn","getters","isUserLogedIn","user","matched","some","record","username"],"sources":["C:/Users/mynig/VScodium/Book-Recommender/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store/index';\nimport HomeView from '../views/HomeView.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/books',\n    name: 'books',\n    component: () => import('../views/BooksView.vue')\n  },\n  {\n    path: '/book/:book_id',\n    name: 'book',\n    component: () => import('../views/BookView.vue')\n  },\n  {\n    path: '/register',\n    name: 'register',\n    component: () => import('../views/RegisterView.vue')\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: () => import('../views/LoginView.vue')\n  },\n  {\n    path: '/recomendBooks',\n    name: 'recomendBooks',\n    component: () => import('../views/RecomendToAddView.vue'),\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/toaddbooks',\n    name: 'toaddbooks',\n    component: () => import('../views/AcceptBooksView.vue'),\n    meta: { requiresAuth: true, requiresRole: 'adminDarko' }\n  },\n  {\n    path: '/bookmarks',\n    name: 'bookmarks',\n    component: () => import('../views/LikedBooksView.vue'),\n    meta: { requiresAuth: true, }\n  },\n  {\n    path: '/:catchAll(.*)',\n    redirect: '/'\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nrouter.beforeEach((to, from, next) => {\n  const isLoggedIn = store.getters.isUserLogedIn;\n  const user = store.getters.user;\n\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (!isLoggedIn) {\n      next({ name: 'login' });\n    } else if (to.matched.some(record => record.meta.requiresRole) && (!user || user.username !== 'adminDarko')) {\n      next({ name: 'home' });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEJ;AACb,CAAC,EACD;EACEE,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB;AAClD,CAAC,EACD;EACEF,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,uBAAuB;AACjD,CAAC,EACD;EACEF,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,2BAA2B;AACrD,CAAC,EACD;EACEF,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,wBAAwB;AAClD,CAAC,EACD;EACEF,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,eAAe;EACrBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,gCAAgC,CAAC;EACzDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC7B,CAAC,EACD;EACEJ,IAAI,EAAE,aAAa;EACnBC,IAAI,EAAE,YAAY;EAClBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,8BAA8B,CAAC;EACvDC,IAAI,EAAE;IAAEC,YAAY,EAAE,IAAI;IAAEC,YAAY,EAAE;EAAa;AACzD,CAAC,EACD;EACEL,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC;EACtDC,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAM;AAC9B,CAAC,EACD;EACEJ,IAAI,EAAE,gBAAgB;EACtBM,QAAQ,EAAE;AACZ,CAAC,CACF;AAED,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EAC1Ba,OAAO,EAAEZ,gBAAgB,CAACa,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CZ;AACF,CAAC,CAAC;AAEFQ,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,MAAMC,UAAU,GAAGnB,KAAK,CAACoB,OAAO,CAACC,aAAa;EAC9C,MAAMC,IAAI,GAAGtB,KAAK,CAACoB,OAAO,CAACE,IAAI;EAE/B,IAAIN,EAAE,CAACO,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACnB,IAAI,CAACC,YAAY,CAAC,EAAE;IACvD,IAAI,CAACY,UAAU,EAAE;MACfD,IAAI,CAAC;QAAEd,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzB,CAAC,MAAM,IAAIY,EAAE,CAACO,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACnB,IAAI,CAACE,YAAY,CAAC,KAAK,CAACc,IAAI,IAAIA,IAAI,CAACI,QAAQ,KAAK,YAAY,CAAC,EAAE;MAC3GR,IAAI,CAAC;QAAEd,IAAI,EAAE;MAAO,CAAC,CAAC;IACxB,CAAC,MAAM;MACLc,IAAI,CAAC,CAAC;IACR;EACF,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}