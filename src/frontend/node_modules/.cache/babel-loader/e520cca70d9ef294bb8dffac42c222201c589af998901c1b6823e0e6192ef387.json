{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BooksShow = _resolveComponent(\"BooksShow\");\n  const _component_PrevPageNext = _resolveComponent(\"PrevPageNext\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_BooksShow, {\n    books: $setup.books,\n    loading: $setup.loading,\n    page: $setup.currentPage\n  }, null, 8 /* PROPS */, [\"books\", \"loading\", \"page\"]), _createVNode(_component_PrevPageNext, {\n    currentPage: $setup.currentPage,\n    totalPages: $setup.totalPages,\n    onPageChange: $setup.getAllBooks\n  }, null, 8 /* PROPS */, [\"currentPage\", \"totalPages\", \"onPageChange\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_BooksShow","books","$setup","loading","page","currentPage","_component_PrevPageNext","totalPages","onPageChange","getAllBooks"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\LikedBooksView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <BooksShow\r\n        :books=\"books\"\r\n        :loading=\"loading\"\r\n        :page=\"currentPage\"\r\n      />\r\n      <PrevPageNext\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        @pageChange=\"getAllBooks\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  import PrevPageNext from '../components/PrevPageNext.vue';\r\n  import services from '../../services/services.js';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter } from 'vue-router';\r\n  import BooksShow from '../components/BooksShow.vue';\r\n  \r\n  export default {\r\n    components: {\r\n      PrevPageNext,\r\n      BooksShow\r\n    },\r\n    setup() {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n      const books = ref([]);\r\n      const totalBooks = ref(0);\r\n      const totalPages = ref(0);\r\n      const currentPage = ref(1);\r\n      const loading = ref(true);\r\n      const limit = 15;\r\n      const user = computed(() => store.state.user);\r\n  \r\n      const getAllBooks = async (page) => {\r\n        loading.value = true;\r\n        try {\r\n          const response = await services.getBookmarks(page, limit, user.value._id);\r\n          if (response.status !== 200) throw new Error('Network response was not ok');\r\n          const data = response.data;\r\n          books.value = data.books;\r\n          totalBooks.value = data.totalBooks;\r\n          totalPages.value = data.totalPages === 0 ? 1 : data.totalPages;\r\n          currentPage.value = data.currentPage;\r\n        } catch (error) {\r\n          console.error('Error fetching books:', error);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n  \r\n      const navigateTo = (path) => {\r\n        router.push(path);\r\n      };\r\n  \r\n      onMounted(() => {\r\n        getAllBooks(currentPage.value);\r\n      });\r\n  \r\n      return {\r\n        books,\r\n        totalBooks,\r\n        totalPages,\r\n        currentPage,\r\n        loading,\r\n        getAllBooks,\r\n        navigateTo,\r\n        user\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped lang=\"scss\">\r\n  .books {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 20px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .spinner {\r\n    flex: 1 1 100%;\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin: 20px;\r\n  }\r\n  \r\n  .book-card {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #f5f5f5;\r\n    border: 1px solid black;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .card-img-top {\r\n    width: 100%;\r\n    height: 40%; /* Adjust the height as needed */\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .card-body {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 18px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .card-subtitle {\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .card-genres {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 10px;\r\n    max-height: 50px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .genre {\r\n    margin: 2px;\r\n    padding: 5px 10px;\r\n    background-color: #eee;\r\n    border-radius: 5px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .pagination button {\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .pagination span {\r\n    font-size: 18px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;;uBACIA,mBAAA,CAWM,cAVJC,YAAA,CAIEC,oBAAA;IAHCC,KAAK,EAAEC,MAAA,CAAAD,KAAK;IACZE,OAAO,EAAED,MAAA,CAAAC,OAAO;IAChBC,IAAI,EAAEF,MAAA,CAAAG;yDAETN,YAAA,CAIEO,uBAAA;IAHCD,WAAW,EAAEH,MAAA,CAAAG,WAAW;IACxBE,UAAU,EAAEL,MAAA,CAAAK,UAAU;IACtBC,YAAU,EAAEN,MAAA,CAAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}