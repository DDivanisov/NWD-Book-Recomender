{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport PrevPageNext from '../components/PrevPageNext.vue';\nimport services from '../../services/services.js';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport BooksShow from '../components/BooksShow.vue';\nexport default {\n  components: {\n    PrevPageNext,\n    BooksShow\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const books = ref([]);\n    const totalBooks = ref(0);\n    const totalPages = ref(0);\n    const currentPage = ref(1);\n    const loading = ref(true);\n    const limit = 15;\n    const user = computed(() => store.state.user);\n    const getAllBooks = async page => {\n      loading.value = true;\n      try {\n        const response = await services.getBookmarks(page, limit, user.value._id);\n        if (response.status !== 200) throw new Error('Network response was not ok');\n        const data = response.data;\n        books.value = data.books;\n        totalBooks.value = data.totalBooks;\n        totalPages.value = data.totalPages === 0 ? 1 : data.totalPages;\n        currentPage.value = data.currentPage;\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const navigateTo = path => {\n      router.push(path);\n    };\n    onMounted(() => {\n      getAllBooks(currentPage.value);\n    });\n    return {\n      books,\n      totalBooks,\n      totalPages,\n      currentPage,\n      loading,\n      getAllBooks,\n      navigateTo,\n      user\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","PrevPageNext","services","useStore","useRouter","BooksShow","components","setup","store","router","books","totalBooks","totalPages","currentPage","loading","limit","user","state","getAllBooks","page","value","response","getBookmarks","_id","status","Error","data","error","console","navigateTo","path","push"],"sources":["C:\\Users\\mynig\\VScodium\\NWD-Books-Recommender\\src\\frontend\\src\\views\\LikedBooksView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <BooksShow\r\n        :books=\"books\"\r\n        :loading=\"loading\"\r\n        :page=\"currentPage\"\r\n      />\r\n      <div v-if=\"loading == false && books.length === 0\" class=\"alert alert-warning\" style=\"margin-top: 100px;\">No bookmarks.</div>\r\n      <PrevPageNext\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        @pageChange=\"getAllBooks\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  import PrevPageNext from '../components/PrevPageNext.vue';\r\n  import services from '../../services/services.js';\r\n  import { useStore } from 'vuex';\r\n  import { useRouter } from 'vue-router';\r\n  import BooksShow from '../components/BooksShow.vue';\r\n  \r\n  export default {\r\n    components: {\r\n      PrevPageNext,\r\n      BooksShow\r\n    },\r\n    setup() {\r\n      const store = useStore();\r\n      const router = useRouter();\r\n      const books = ref([]);\r\n      const totalBooks = ref(0);\r\n      const totalPages = ref(0);\r\n      const currentPage = ref(1);\r\n      const loading = ref(true);\r\n      const limit = 15;\r\n      const user = computed(() => store.state.user);\r\n  \r\n      const getAllBooks = async (page) => {\r\n        loading.value = true;\r\n        try {\r\n          const response = await services.getBookmarks(page, limit, user.value._id);\r\n          if (response.status !== 200) throw new Error('Network response was not ok');\r\n          const data = response.data;\r\n          books.value = data.books;\r\n          totalBooks.value = data.totalBooks;\r\n          totalPages.value = data.totalPages === 0 ? 1 : data.totalPages;\r\n          currentPage.value = data.currentPage;\r\n        } catch (error) {\r\n          console.error('Error fetching books:', error);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n  \r\n      const navigateTo = (path) => {\r\n        router.push(path);\r\n      };\r\n  \r\n      onMounted(() => {\r\n        getAllBooks(currentPage.value);\r\n      });\r\n  \r\n      return {\r\n        books,\r\n        totalBooks,\r\n        totalPages,\r\n        currentPage,\r\n        loading,\r\n        getAllBooks,\r\n        navigateTo,\r\n        user\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped lang=\"scss\">\r\n  .books {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 20px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .spinner {\r\n    flex: 1 1 100%;\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin: 20px;\r\n  }\r\n  \r\n  .book-card {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #f5f5f5;\r\n    border: 1px solid black;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .card-img-top {\r\n    width: 100%;\r\n    height: 40%; /* Adjust the height as needed */\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .card-body {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 18px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .card-subtitle {\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .card-genres {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 10px;\r\n    max-height: 50px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .genre {\r\n    margin: 2px;\r\n    padding: 5px 10px;\r\n    background-color: #eee;\r\n    border-radius: 5px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .pagination button {\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .pagination span {\r\n    font-size: 18px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAiBE,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAK;AAC9C,OAAOC,YAAW,MAAO,gCAAgC;AACzD,OAAOC,QAAO,MAAO,4BAA4B;AACjD,SAASC,QAAO,QAAS,MAAM;AAC/B,SAASC,SAAQ,QAAS,YAAY;AACtC,OAAOC,SAAQ,MAAO,6BAA6B;AAEnD,eAAe;EACbC,UAAU,EAAE;IACVL,YAAY;IACZI;EACF,CAAC;EACDE,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIL,QAAQ,CAAC,CAAC;IACxB,MAAMM,MAAK,GAAIL,SAAS,CAAC,CAAC;IAC1B,MAAMM,KAAI,GAAIZ,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMa,UAAS,GAAIb,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMc,UAAS,GAAId,GAAG,CAAC,CAAC,CAAC;IACzB,MAAMe,WAAU,GAAIf,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMgB,OAAM,GAAIhB,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMiB,KAAI,GAAI,EAAE;IAChB,MAAMC,IAAG,GAAIhB,QAAQ,CAAC,MAAMQ,KAAK,CAACS,KAAK,CAACD,IAAI,CAAC;IAE7C,MAAME,WAAU,GAAI,MAAOC,IAAI,IAAK;MAClCL,OAAO,CAACM,KAAI,GAAI,IAAI;MACpB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMnB,QAAQ,CAACoB,YAAY,CAACH,IAAI,EAAEJ,KAAK,EAAEC,IAAI,CAACI,KAAK,CAACG,GAAG,CAAC;QACzE,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAC3E,MAAMC,IAAG,GAAIL,QAAQ,CAACK,IAAI;QAC1BhB,KAAK,CAACU,KAAI,GAAIM,IAAI,CAAChB,KAAK;QACxBC,UAAU,CAACS,KAAI,GAAIM,IAAI,CAACf,UAAU;QAClCC,UAAU,CAACQ,KAAI,GAAIM,IAAI,CAACd,UAAS,KAAM,IAAI,IAAIc,IAAI,CAACd,UAAU;QAC9DC,WAAW,CAACO,KAAI,GAAIM,IAAI,CAACb,WAAW;MACtC,EAAE,OAAOc,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,UAAU;QACRb,OAAO,CAACM,KAAI,GAAI,KAAK;MACvB;IACF,CAAC;IAED,MAAMS,UAAS,GAAKC,IAAI,IAAK;MAC3BrB,MAAM,CAACsB,IAAI,CAACD,IAAI,CAAC;IACnB,CAAC;IAED/B,SAAS,CAAC,MAAM;MACdmB,WAAW,CAACL,WAAW,CAACO,KAAK,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO;MACLV,KAAK;MACLC,UAAU;MACVC,UAAU;MACVC,WAAW;MACXC,OAAO;MACPI,WAAW;MACXW,UAAU;MACVb;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}