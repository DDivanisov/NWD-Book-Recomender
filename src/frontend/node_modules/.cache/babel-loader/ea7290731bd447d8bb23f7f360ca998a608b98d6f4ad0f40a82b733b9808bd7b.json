{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport { useStore } from 'vuex';\nimport services from '../../services/services';\nexport default {\n  setup() {\n    const store = useStore();\n    const genres = ref(['Fiction', 'Fantasy', 'Science Fiction', 'Mystery', 'Thriller', 'Romance', 'Historical', 'Non-Fiction', 'Biography', 'Self-Help', 'Horror', 'Adventure', 'Comedy', 'Drama']);\n    const user = computed(() => store.state.user);\n    const selectedGenres = ref([]);\n    const fetchSelectedGenres = async () => {\n      try {\n        const response = await services.getGenres(user.value._id);\n        selectedGenres.value = response.data.genres || [];\n      } catch (error) {\n        console.error('Error fetching selected genres:', error);\n      }\n    };\n    const toggleGenre = genre => {\n      if (selectedGenres.value.includes(genre)) {\n        removeGenre(genre);\n      } else {\n        selectedGenres.value.push(genre);\n      }\n    };\n    const removeGenre = async genre => {\n      selectedGenres.value = selectedGenres.value.filter(g => g !== genre);\n    };\n    const submitGenres = async () => {\n      try {\n        await updateGenres(selectedGenres.value);\n        alert('Genres submitted successfully!');\n      } catch (error) {\n        console.error('Error submitting genres:', error);\n      }\n    };\n    const updateGenres = async genres => {\n      try {\n        await services.addLikedGenres({\n          user_id: user.value._id,\n          genres\n        });\n      } catch (error) {\n        console.error('Error updating genres:', error);\n      }\n    };\n    onMounted(() => {\n      fetchSelectedGenres();\n    });\n    return {\n      genres,\n      selectedGenres,\n      toggleGenre,\n      removeGenre,\n      submitGenres\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","useStore","services","setup","store","genres","user","state","selectedGenres","fetchSelectedGenres","response","getGenres","value","_id","data","error","console","toggleGenre","genre","includes","removeGenre","push","filter","g","submitGenres","updateGenres","alert","addLikedGenres","user_id"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\GenresULikeView.vue"],"sourcesContent":["<template>\r\n    <div class=\"genre-selection\">\r\n      <h2>Select Your Favorite Genres</h2>\r\n      <div class=\"genres\" v-if=\"selectedGenres\">\r\n        <div \r\n          v-for=\"(genre, index) in genres\" \r\n          :key=\"index\" \r\n          :class=\"['genre', { selected: selectedGenres.includes(genre) }]\" \r\n          @click=\"toggleGenre(genre)\"\r\n        >\r\n          {{ genre }}\r\n          <button v-if=\"selectedGenres.includes(genre)\" @click.stop=\"removeGenre(genre)\" class=\"remove-btn\">Remove</button>\r\n        </div>\r\n      </div>\r\n      <button @click=\"submitGenres\" class=\"submit-btn\">Submit</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport services from '../../services/services';\r\n\r\nexport default {\r\n  setup() {\r\n    const store = useStore();\r\n    const genres = ref([\r\n      'Fiction', 'Fantasy', 'Science Fiction', 'Mystery', 'Thriller', \r\n      'Romance', 'Historical', 'Non-Fiction', 'Biography', 'Self-Help', \r\n      'Horror', 'Adventure', 'Comedy', 'Drama'\r\n    ]);\r\n    const user = computed(() => store.state.user); \r\n    const selectedGenres = ref([]);\r\n\r\n    const fetchSelectedGenres = async () => {\r\n      try {\r\n        const response = await services.getGenres(user.value._id);\r\n        selectedGenres.value = response.data.genres || [];\r\n      } catch (error) {\r\n        console.error('Error fetching selected genres:', error);\r\n      }\r\n    };\r\n\r\n    const toggleGenre = (genre) => {\r\n      if (selectedGenres.value.includes(genre)) {\r\n        removeGenre(genre);\r\n      } else {\r\n        selectedGenres.value.push(genre);\r\n      }\r\n    };\r\n\r\n    const removeGenre = async (genre) => {\r\n      selectedGenres.value = selectedGenres.value.filter(g => g !== genre);\r\n    };\r\n\r\n    const submitGenres = async () => {\r\n      try {\r\n        await updateGenres(selectedGenres.value);\r\n        alert('Genres submitted successfully!');\r\n      } catch (error) {\r\n        console.error('Error submitting genres:', error);\r\n      }\r\n    };\r\n\r\n    const updateGenres = async (genres) => {\r\n      try {\r\n        await services.addLikedGenres({ \r\n          user_id: user.value._id,\r\n          genres\r\n        });\r\n      } catch (error) {\r\n        console.error('Error updating genres:', error);\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchSelectedGenres();\r\n    });\r\n\r\n    return {\r\n      genres,\r\n      selectedGenres,\r\n      toggleGenre,\r\n      removeGenre,\r\n      submitGenres\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n  .genre-selection {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    background-color: rgb(250, 250, 250, 0.7);\r\n    margin-top: 10%;\r\n    margin-left: 5%;\r\n    max-width: 90%;\r\n    max-height: 65vh;\r\n    h2 {\r\n      margin-bottom: 20px;\r\n    }\r\n  \r\n    .genres {\r\n      display: grid;\r\n      grid-template-columns: repeat(3, 1fr);\r\n      gap: 10px;\r\n      width: 100%;\r\n      max-width: 600px;\r\n      margin-bottom: 20px;\r\n    }\r\n  \r\n    .genre {\r\n      padding: 10px;\r\n      background-color: #f5f5f5;\r\n      border: 1px solid #ccc;\r\n      border-radius: 5px;\r\n      text-align: center;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s, border-color 0.3s;\r\n      position: relative;\r\n      \r\n      &.selected {\r\n        background-color: #4caf50;\r\n        color: white;\r\n        border-color: #388e3c;\r\n      }\r\n  \r\n      .remove-btn {\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: #f44336;\r\n        color: white;\r\n        border: none;\r\n        border-radius: 0 5px 0 5px;\r\n        cursor: pointer;\r\n        padding: 5px;\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  \r\n    .submit-btn {\r\n      padding: 10px 20px;\r\n      background-color: #4caf50;\r\n      color: white;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s;\r\n  \r\n      &:hover {\r\n        background-color: #388e3c;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n  "],"mappings":";AAmBA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAO,QAAS,KAAK;AAC9C,SAASC,QAAO,QAAS,MAAM;AAC/B,OAAOC,QAAO,MAAO,yBAAyB;AAE9C,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,MAAK,GAAIP,GAAG,CAAC,CACjB,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE,SAAS,EAAE,UAAU,EAC9D,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,WAAW,EAAE,WAAW,EAChE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAM,CACxC,CAAC;IACF,MAAMQ,IAAG,GAAIN,QAAQ,CAAC,MAAMI,KAAK,CAACG,KAAK,CAACD,IAAI,CAAC;IAC7C,MAAME,cAAa,GAAIV,GAAG,CAAC,EAAE,CAAC;IAE9B,MAAMW,mBAAkB,GAAI,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,QAAQ,CAACS,SAAS,CAACL,IAAI,CAACM,KAAK,CAACC,GAAG,CAAC;QACzDL,cAAc,CAACI,KAAI,GAAIF,QAAQ,CAACI,IAAI,CAACT,MAAK,IAAK,EAAE;MACnD,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IAED,MAAME,WAAU,GAAKC,KAAK,IAAK;MAC7B,IAAIV,cAAc,CAACI,KAAK,CAACO,QAAQ,CAACD,KAAK,CAAC,EAAE;QACxCE,WAAW,CAACF,KAAK,CAAC;MACpB,OAAO;QACLV,cAAc,CAACI,KAAK,CAACS,IAAI,CAACH,KAAK,CAAC;MAClC;IACF,CAAC;IAED,MAAME,WAAU,GAAI,MAAOF,KAAK,IAAK;MACnCV,cAAc,CAACI,KAAI,GAAIJ,cAAc,CAACI,KAAK,CAACU,MAAM,CAACC,CAAA,IAAKA,CAAA,KAAML,KAAK,CAAC;IACtE,CAAC;IAED,MAAMM,YAAW,GAAI,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,YAAY,CAACjB,cAAc,CAACI,KAAK,CAAC;QACxCc,KAAK,CAAC,gCAAgC,CAAC;MACzC,EAAE,OAAOX,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAED,MAAMU,YAAW,GAAI,MAAOpB,MAAM,IAAK;MACrC,IAAI;QACF,MAAMH,QAAQ,CAACyB,cAAc,CAAC;UAC5BC,OAAO,EAAEtB,IAAI,CAACM,KAAK,CAACC,GAAG;UACvBR;QACF,CAAC,CAAC;MACJ,EAAE,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDhB,SAAS,CAAC,MAAM;MACdU,mBAAmB,CAAC,CAAC;IACvB,CAAC,CAAC;IAEF,OAAO;MACLJ,MAAM;MACNG,cAAc;MACdS,WAAW;MACXG,WAAW;MACXI;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}