{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_BooksShow = _resolveComponent(\"BooksShow\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_BooksShow, {\n    books: $setup.books,\n    loading: $setup.loading,\n    page: 1\n  }, null, 8 /* PROPS */, [\"books\", \"loading\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_BooksShow","books","$setup","loading","page"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\RecomendedBooksView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <BooksShow\r\n      :books=\"books\"\r\n      :loading=\"loading\"\r\n      :page=1\r\n    />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {  computed, onMounted, ref } from 'vue';\r\nimport BooksShow from '../components/BooksShow.vue';\r\nimport services from '../../services/services.js';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  components: {\r\n    BooksShow\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const books = ref([]);\r\n    const loading = ref(true);\r\n    const user = computed(() => store.state.user);\r\n\r\n    const getRecomendations = async () => {\r\n        loading.value = true;\r\n\r\n        try {\r\n            const bmks = await services.getBookmarks(1, 15, user.value._id);\r\n            const lkG = await services.getGenres(user.value._id);\r\n\r\n            const bmk = bmks.data.books.map(book => `${book.title} - ${book.author}`);\r\n            console.log(bmk);\r\n        \r\n            const genres = lkG.data.genres;\r\n            console.log(lkG);\r\n\r\n            const response = await services.getRecomended({\r\n                bookmarks: bmks,\r\n                likedGenres: genres\r\n            });\r\n            const data = response.data;\r\n            books.value = data.recommendedBooks;\r\n        } catch(error){\r\n            console.error('Error fetching books:', error);\r\n        } finally {\r\n            loading.value = false;\r\n        }\r\n    };\r\n    \r\n\r\n    onMounted(() => {\r\n        getRecomendations()\r\n    });\r\n\r\n    return {\r\n      books,\r\n      loading,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>"],"mappings":";;;uBACIA,mBAAA,CAMM,cALNC,YAAA,CAIEC,oBAAA;IAHCC,KAAK,EAAEC,MAAA,CAAAD,KAAK;IACZE,OAAO,EAAED,MAAA,CAAAC,OAAO;IAChBC,IAAI,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}