{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_FilterTab = _resolveComponent(\"FilterTab\");\n  const _component_BooksShow = _resolveComponent(\"BooksShow\");\n  const _component_PrevPageNext = _resolveComponent(\"PrevPageNext\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_FilterTab, {\n    onGenreSelected: $setup.filterBooksByGenre\n  }, null, 8 /* PROPS */, [\"onGenreSelected\"]), _createVNode(_component_BooksShow, {\n    books: $setup.books,\n    loading: $setup.loading,\n    page: $setup.currentPage\n  }, null, 8 /* PROPS */, [\"books\", \"loading\", \"page\"]), _createVNode(_component_PrevPageNext, {\n    currentPage: $setup.currentPage,\n    totalPages: $setup.totalPages,\n    onPageChange: $setup.getAllBooks\n  }, null, 8 /* PROPS */, [\"currentPage\", \"totalPages\", \"onPageChange\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_FilterTab","onGenreSelected","$setup","filterBooksByGenre","_component_BooksShow","books","loading","page","currentPage","_component_PrevPageNext","totalPages","onPageChange","getAllBooks"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\BooksView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <FilterTab @genreSelected=\"filterBooksByGenre\" />\r\n    <BooksShow\r\n      :books=\"books\"\r\n      :loading=\"loading\"\r\n      :page=\"currentPage\"\r\n    />\r\n    <PrevPageNext\r\n      :currentPage=\"currentPage\"\r\n      :totalPages=\"totalPages\"\r\n      @pageChange=\"getAllBooks\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { computed, onMounted, ref } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport PrevPageNext from '../components/PrevPageNext.vue';\r\nimport BooksShow from '../components/BooksShow.vue';\r\nimport FilterTab from '@/components/FilterTab.vue';\r\nimport services from '../../services/services.js';\r\n\r\nexport default {\r\n  components: {\r\n    PrevPageNext,\r\n    BooksShow,\r\n    FilterTab\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const books = ref([]);\r\n    const totalBooks = ref(0);\r\n    const totalPages = ref(0);\r\n    const loading = ref(true);\r\n    const limit = 15;\r\n    const currentPage = computed(() => store.state.currentPage);\r\n\r\n    const getAllBooks = async (page, genre = null) => {\r\n      store.dispatch('setPage', page);\r\n      loading.value = true;\r\n      try {\r\n        const response = await services.getBooks(page, limit, genre);\r\n        if (response.status !== 200) throw new Error('Network response was not ok');\r\n        const data = response.data;\r\n        books.value = data.books;\r\n        totalBooks.value = data.totalBooks;\r\n        totalPages.value = data.totalPages;\r\n      } catch (error) {\r\n        console.error('Error fetching books:', error);\r\n      } finally {\r\n        loading.value = false;\r\n      }\r\n    };\r\n\r\n    const filterBooksByGenre = (genre) => {\r\n      getAllBooks(1, genre);\r\n    };\r\n\r\n    onMounted(() => {\r\n      getAllBooks(currentPage.value, 'All');\r\n    });\r\n\r\n    return {\r\n      books,\r\n      totalBooks,\r\n      totalPages,\r\n      currentPage,\r\n      loading,\r\n      getAllBooks,\r\n      filterBooksByGenre,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n</style>\r\n"],"mappings":";;;;;uBACEA,mBAAA,CAYM,cAXJC,YAAA,CAAiDC,oBAAA;IAArCC,eAAa,EAAEC,MAAA,CAAAC;EAAkB,8CAC7CJ,YAAA,CAIEK,oBAAA;IAHCC,KAAK,EAAEH,MAAA,CAAAG,KAAK;IACZC,OAAO,EAAEJ,MAAA,CAAAI,OAAO;IAChBC,IAAI,EAAEL,MAAA,CAAAM;yDAETT,YAAA,CAIEU,uBAAA;IAHCD,WAAW,EAAEN,MAAA,CAAAM,WAAW;IACxBE,UAAU,EAAER,MAAA,CAAAQ,UAAU;IACtBC,YAAU,EAAET,MAAA,CAAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}