{"ast":null,"code":"import { computed, onMounted, ref } from 'vue';\nimport BooksShow from '../components/BooksShow.vue';\nimport services from '../../services/services.js';\nimport { useStore } from 'vuex';\nexport default {\n  components: {\n    BooksShow\n  },\n  setup() {\n    const store = useStore();\n    const books = ref([]);\n    const loading = ref(true);\n    const user_id = computed(() => store.state.user_id);\n    const getRecomendations = async () => {\n      loading.value = true;\n      try {\n        const response = await services.getRecomended({\n          bookmarks: services.getBookmarks(1, 15, user_id.value),\n          likedGenres: services.getGenres(user_id.value)\n        });\n        const data = response.data;\n        books.value = data.recommendedBooks;\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(() => {\n      getRecomendations;\n    });\n    return {\n      books,\n      loading\n    };\n  }\n};","map":{"version":3,"names":["computed","onMounted","ref","BooksShow","services","useStore","components","setup","store","books","loading","user_id","state","getRecomendations","value","response","getRecomended","bookmarks","getBookmarks","likedGenres","getGenres","data","recommendedBooks","error","console"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\RecomendedBooksView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <BooksShow\r\n      :books=\"books\"\r\n      :loading=\"loading\"\r\n      :page=1\r\n    />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {  computed, onMounted, ref } from 'vue';\r\nimport BooksShow from '../components/BooksShow.vue';\r\nimport services from '../../services/services.js';\r\nimport { useStore } from 'vuex';\r\n\r\nexport default {\r\n  components: {\r\n    BooksShow\r\n  },\r\n  setup() {\r\n    const store = useStore();\r\n    const books = ref([]);\r\n    const loading = ref(true);\r\n    const user_id = computed(() => store.state.user_id);\r\n\r\n    const getRecomendations = async () => {\r\n        loading.value = true;\r\n        try {\r\n            const response = await services.getRecomended({\r\n                bookmarks: services.getBookmarks(1, 15, user_id.value),\r\n                likedGenres: services.getGenres(user_id.value)\r\n            });\r\n            const data = response.data;\r\n            books.value = data.recommendedBooks;\r\n        } catch(error){\r\n            console.error('Error fetching books:', error);\r\n        } finally {\r\n            loading.value = false;\r\n        }\r\n    };\r\n    \r\n\r\n    onMounted(() => {\r\n        getRecomendations\r\n    });\r\n\r\n    return {\r\n      books,\r\n      loading,\r\n    };\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n</style>"],"mappings":"AAWA,SAAUA,QAAQ,EAAEC,SAAS,EAAEC,GAAE,QAAS,KAAK;AAC/C,OAAOC,SAAQ,MAAO,6BAA6B;AACnD,OAAOC,QAAO,MAAO,4BAA4B;AACjD,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC,CAAC;IACxB,MAAMI,KAAI,GAAIP,GAAG,CAAC,EAAE,CAAC;IACrB,MAAMQ,OAAM,GAAIR,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMS,OAAM,GAAIX,QAAQ,CAAC,MAAMQ,KAAK,CAACI,KAAK,CAACD,OAAO,CAAC;IAEnD,MAAME,iBAAgB,GAAI,MAAAA,CAAA,KAAY;MAClCH,OAAO,CAACI,KAAI,GAAI,IAAI;MACpB,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMX,QAAQ,CAACY,aAAa,CAAC;UAC1CC,SAAS,EAAEb,QAAQ,CAACc,YAAY,CAAC,CAAC,EAAE,EAAE,EAAEP,OAAO,CAACG,KAAK,CAAC;UACtDK,WAAW,EAAEf,QAAQ,CAACgB,SAAS,CAACT,OAAO,CAACG,KAAK;QACjD,CAAC,CAAC;QACF,MAAMO,IAAG,GAAIN,QAAQ,CAACM,IAAI;QAC1BZ,KAAK,CAACK,KAAI,GAAIO,IAAI,CAACC,gBAAgB;MACvC,EAAE,OAAMC,KAAK,EAAC;QACVC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,UAAU;QACNb,OAAO,CAACI,KAAI,GAAI,KAAK;MACzB;IACJ,CAAC;IAGDb,SAAS,CAAC,MAAM;MACZY,iBAAgB;IACpB,CAAC,CAAC;IAEF,OAAO;MACLJ,KAAK;MACLC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}