{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6e162b86\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"wrap\"\n};\nconst _hoisted_3 = {\n  class: \"add-comment\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"comment-form\"\n};\nconst _hoisted_5 = {\n  key: 1\n};\nconst _hoisted_6 = {\n  class: \"description\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"Loading...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createTextVNode(\" Leave a comment \"), _createElementVNode(\"span\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.toggleCommentForm && $setup.toggleCommentForm(...args)),\n    class: \"comm-btn\"\n  }, _toDisplayString($setup.showForm ? '-' : '+'), 1 /* TEXT */)])]), $setup.showForm ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.newCommentDescription = $event),\n    placeholder: \"Enter your comment here...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newCommentDescription]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.submitComment && $setup.submitComment(...args)),\n    style: {\n      \"margin-right\": \"10px\"\n    }\n  }, \"Send\")])) : _createCommentVNode(\"v-if\", true), $setup.localComments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No Comments\")) : (_openBlock(true), _createElementBlock(_Fragment, {\n    key: 2\n  }, _renderList($setup.localComments, comment => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: comment.createdAt,\n      class: \"comm-detail\"\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"h4\", null, _toDisplayString(comment.user), 1 /* TEXT */), _createElementVNode(\"h6\", null, _toDisplayString(comment.createdAt), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, _toDisplayString(comment.description), 1 /* TEXT */), _createElementVNode(\"div\", null, [comment.user === $props.username || $setup.user.username === 'adminDarko' ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $setup.deleteComment(comment.id)\n    }, \"Delete Comment\", 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))]));\n}","map":{"version":3,"names":["key","class","$props","loading","_createElementBlock","_hoisted_1","_hoisted_2","_createElementVNode","_hoisted_3","_createTextVNode","onClick","_cache","args","$setup","toggleCommentForm","showForm","_hoisted_4","$event","newCommentDescription","placeholder","submitComment","style","_createCommentVNode","localComments","length","_hoisted_5","_Fragment","_renderList","comment","createdAt","_toDisplayString","user","_hoisted_6","description","username","deleteComment","id","_hoisted_7"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\components\\ComentsShow.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"loading\" class=\"spinner\">Loading...</div>\r\n    <div v-else class=\"wrap\">\r\n      <div class=\"add-comment\">\r\n        Leave a comment\r\n        <span>\r\n          <button @click=\"toggleCommentForm\" class=\"comm-btn\">{{ showForm ? '-' : '+' }}</button>\r\n        </span>\r\n      </div>\r\n  \r\n      <div v-if=\"showForm\" class=\"comment-form\">\r\n        <textarea v-model=\"newCommentDescription\" placeholder=\"Enter your comment here...\"></textarea>\r\n        <button @click=\"submitComment\" style=\"margin-right: 10px;\">Send</button>\r\n      </div>\r\n  \r\n      <div v-if=\"localComments.length === 0\">No Comments</div>\r\n      <div v-else v-for=\"comment in localComments\" :key=\"comment.createdAt\" class=\"comm-detail\">\r\n        <div>\r\n          <h4>{{ comment.user }}</h4>\r\n          <h6>{{ comment.createdAt }}</h6>\r\n        </div>\r\n        <div class=\"description\">{{ comment.description }}</div>\r\n        <div>\r\n          <button v-if=\"comment.user === username || user.username === 'adminDarko'\" @click=\"deleteComment(comment.id)\">Delete Comment</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n<script>\r\n  import { ref, computed, watch } from 'vue';\r\n  import { useStore } from 'vuex';\r\n  import services from '../../services/services.js';\r\n  \r\n  export default {\r\n    props: {\r\n      username: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      book_id: {\r\n        type: String,\r\n        required: true\r\n      },\r\n      comments: {\r\n        type: Array,\r\n        required: true\r\n      },\r\n      loading: {\r\n        type: Boolean,\r\n        required: true\r\n      }\r\n    },\r\n    setup(props) {\r\n      const store = useStore();\r\n      const showForm = ref(false);\r\n      const newCommentDescription = ref('');\r\n      const localComments = ref([]);\r\n      const user = computed(() => store.state.user);\r\n  \r\n      watch(() => props.comments, (newComments) => {\r\n        localComments.value = [...newComments];\r\n      }, { immediate: true });\r\n  \r\n      const toggleCommentForm = () => {\r\n        showForm.value = !showForm.value;\r\n        newCommentDescription.value = '';\r\n      };\r\n  \r\n      const formatDate = () => {\r\n        const now = new Date();\r\n        const offset = 2;\r\n        const utcDate = new Date(now.getTime() + (offset * 60 * 60 * 1000));\r\n  \r\n        const year = utcDate.getFullYear();\r\n        const month = String(utcDate.getMonth() + 1).padStart(2, '0');\r\n        const day = String(utcDate.getDate()).padStart(2, '0');\r\n        const hours = String(utcDate.getHours()).padStart(2, '0');\r\n        const minutes = String(utcDate.getMinutes()).padStart(2, '0');\r\n        const seconds = String(utcDate.getSeconds()).padStart(2, '0');\r\n  \r\n        return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n      };\r\n  \r\n      const submitComment = async () => {\r\n        if (newCommentDescription.value.trim() === '') {\r\n          alert('Comment description cannot be empty');\r\n          return;\r\n        }\r\n  \r\n        const newComment = {\r\n          book_id: props.book_id,\r\n          user: props.username,\r\n          description: newCommentDescription.value,\r\n          createdAt: formatDate()\r\n        };\r\n        try {\r\n          const response = await services.addComment(newComment);\r\n  \r\n          const addedComment = response.data;\r\n          localComments.value.push(addedComment);\r\n  \r\n          toggleCommentForm();\r\n        } catch (err) {\r\n          console.log(err.response.data.msg);\r\n        }\r\n      };\r\n  \r\n      const deleteComment = async (commentId) => {\r\n        try {\r\n          await services.removeComment({\r\n            book_id: props.book_id,\r\n            commId: commentId\r\n          });\r\n          localComments.value = localComments.value.filter(comment => comment.id !== commentId);\r\n        } catch (err) {\r\n          console.log(err.response.data.msg);\r\n        }\r\n      };\r\n  \r\n      return {\r\n        showForm,\r\n        newCommentDescription,\r\n        localComments,\r\n        user,\r\n        toggleCommentForm,\r\n        submitComment,\r\n        deleteComment\r\n      };\r\n    }\r\n  };\r\n</script>\r\n  \r\n  <style scoped lang=\"scss\">\r\n\r\n  .spinner {\r\n    flex: 1 1 100%;\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin: 20px;\r\n  }\r\n\r\n  .wrap {\r\n    background-color: lightblue;\r\n  }\r\n  .add-comment {\r\n    border: solid black 2px;\r\n    border-radius: 5%;\r\n    margin-top: 10px;\r\n    padding: 10px;\r\n  }\r\n  .add-comment span {\r\n    margin-left: 10px;\r\n  }\r\n  .comm-btn {\r\n    border: none;\r\n    background-color: lightcyan;\r\n  }\r\n  .comment-form {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n  \r\n    textarea {\r\n      width: 95%;\r\n      height: 100px;\r\n      padding: 10px;\r\n      margin: 10px;\r\n      align-self: center;\r\n      border-radius: 4px;\r\n      border: 1px solid #ccc;\r\n    }\r\n  \r\n    button {\r\n      align-self: flex-end;\r\n      padding: 10px 20px;\r\n      border: none;\r\n      border-radius: 4px;\r\n      background-color: #007bff;\r\n      color: #fff;\r\n      cursor: pointer;\r\n  \r\n      &:hover {\r\n        background-color: #0056b3;\r\n      }\r\n    }\r\n  }\r\n\r\n  .comm-detail{\r\n    border: solid black 1px;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    div {\r\n      margin-right: 5px;\r\n      padding: 5px;\r\n\r\n      button {\r\n        border: soldi red 1px;\r\n        border-radius: 5%;\r\n        min-width: 80px;\r\n        color: white;\r\n        background-color: red;\r\n        margin-top: 10px;\r\n        padding: 5px;\r\n      }\r\n    }\r\n    .description {\r\n      border: gray solid 1px;\r\n      background-color: lightgray;\r\n      padding: 20px;\r\n      max-width: 70%;\r\n    }\r\n    \r\n  }\r\n  </style>\r\n  "],"mappings":";;;EAAAA,GAAA;EACwBC,KAAK,EAAC;;;EAD9BD,GAAA;EAEgBC,KAAK,EAAC;;;EACXA,KAAK,EAAC;AAAa;;EAH9BD,GAAA;EAU2BC,KAAK,EAAC;;;EAVjCD,GAAA;AAAA;;EAqBaC,KAAK,EAAC;AAAa;mBArBhC;;SACeC,MAAA,CAAAC,OAAO,I,cAAlBC,mBAAA,CAAoD,OAApDC,UAAoD,EAAhB,YAAU,M,cAC9CD,mBAAA,CAwBM,OAxBNE,UAwBM,GAvBJC,mBAAA,CAKM,OALNC,UAKM,GARZC,gBAAA,CAG+B,mBAEvB,GAAAF,mBAAA,CAEO,eADLA,mBAAA,CAAuF;IAA9EG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,iBAAA,IAAAD,MAAA,CAAAC,iBAAA,IAAAF,IAAA,CAAiB;IAAEX,KAAK,EAAC;sBAAcY,MAAA,CAAAE,QAAQ,6B,KAIxDF,MAAA,CAAAE,QAAQ,I,cAAnBX,mBAAA,CAGM,OAHNY,UAGM,G,gBAFJT,mBAAA,CAA8F;IAXtG,uBAAAI,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAW2BJ,MAAA,CAAAK,qBAAqB,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAnCN,MAAA,CAAAK,qBAAqB,E,GACxCX,mBAAA,CAAwE;IAA/DG,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAO,aAAA,IAAAP,MAAA,CAAAO,aAAA,IAAAR,IAAA,CAAa;IAAES,KAA2B,EAA3B;MAAA;IAAA;KAA4B,MAAI,E,KAZvEC,mBAAA,gBAeiBT,MAAA,CAAAU,aAAa,CAACC,MAAM,U,cAA/BpB,mBAAA,CAAwD,OAf9DqB,UAAA,EAe6C,aAAW,M,kBAClDrB,mBAAA,CASMsB,SAAA;IAzBZ1B,GAAA;EAAA,GAAA2B,WAAA,CAgBoCd,MAAA,CAAAU,aAAa,EAAxBK,OAAO;yBAA1BxB,mBAAA,CASM;MATwCJ,GAAG,EAAE4B,OAAO,CAACC,SAAS;MAAE5B,KAAK,EAAC;QAC1EM,mBAAA,CAGM,cAFJA,mBAAA,CAA2B,YAAAuB,gBAAA,CAApBF,OAAO,CAACG,IAAI,kBACnBxB,mBAAA,CAAgC,YAAAuB,gBAAA,CAAzBF,OAAO,CAACC,SAAS,iB,GAE1BtB,mBAAA,CAAwD,OAAxDyB,UAAwD,EAAAF,gBAAA,CAA5BF,OAAO,CAACK,WAAW,kBAC/C1B,mBAAA,CAEM,cADUqB,OAAO,CAACG,IAAI,KAAK7B,MAAA,CAAAgC,QAAQ,IAAIrB,MAAA,CAAAkB,IAAI,CAACG,QAAQ,qB,cAAxD9B,mBAAA,CAAqI;MAvB/IJ,GAAA;MAuBsFU,OAAK,EAAAO,MAAA,IAAEJ,MAAA,CAAAsB,aAAa,CAACP,OAAO,CAACQ,EAAE;OAAG,gBAAc,iBAvBtIC,UAAA,KAAAf,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}