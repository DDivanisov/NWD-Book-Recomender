{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"books\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"spinner\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"card-body\"\n};\nconst _hoisted_7 = {\n  class: \"card-title\"\n};\nconst _hoisted_8 = {\n  class: \"card-subtitle mb-2 text-muted\"\n};\nconst _hoisted_9 = {\n  class: \"card-genres\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PrevPageNext = _resolveComponent(\"PrevPageNext\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_PrevPageNext, {\n    currentPage: $setup.currentPage,\n    totalPages: $setup.totalPages,\n    onPageChange: $setup.getAllBooks\n  }, null, 8 /* PROPS */, [\"currentPage\", \"totalPages\", \"onPageChange\"]), _createElementVNode(\"div\", _hoisted_1, [$setup.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \"Loading...\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.books, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item._id,\n      class: \"book-card\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n      src: item.picture_link,\n      class: \"card-img-top\",\n      alt: \"Book cover image\"\n    }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"h5\", _hoisted_7, _toDisplayString(item.title), 1 /* TEXT */), _createElementVNode(\"h6\", _hoisted_8, _toDisplayString(item.author), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.genres, (gen, index) => {\n      return _openBlock(), _createElementBlock(\"span\", {\n        key: index,\n        class: \"genre\"\n      }, _toDisplayString(gen), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])])]), _createElementVNode(\"div\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.reject(item._id)\n    }, \"Reject\", 8 /* PROPS */, _hoisted_10), _createElementVNode(\"button\", {\n      onClick: $event => $setup.accept(item._id)\n    }, \"Accept\", 8 /* PROPS */, _hoisted_11), _createElementVNode(\"button\", {\n      onClick: $event => $setup.inDb(item.title, item.author)\n    }, \"Check if already in database\", 8 /* PROPS */, _hoisted_12)])]);\n  }), 128 /* KEYED_FRAGMENT */))]))]), _createVNode(_component_PrevPageNext, {\n    currentPage: $setup.currentPage,\n    totalPages: $setup.totalPages,\n    onPageChange: $setup.getAllBooks\n  }, null, 8 /* PROPS */, [\"currentPage\", \"totalPages\", \"onPageChange\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_createVNode","_component_PrevPageNext","currentPage","$setup","totalPages","onPageChange","getAllBooks","_createElementVNode","_hoisted_1","loading","_hoisted_2","_hoisted_3","_Fragment","_renderList","books","item","_id","_hoisted_4","src","picture_link","alt","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","title","_hoisted_8","author","_hoisted_9","genres","gen","index","onClick","$event","reject","_hoisted_10","accept","_hoisted_11","inDb","_hoisted_12"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\AcceptBooksView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <PrevPageNext\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        @pageChange=\"getAllBooks\"\r\n      />\r\n      <div class=\"books\">\r\n        <div v-if=\"loading\" class=\"spinner\">Loading...</div>\r\n        <div v-else>\r\n          <div v-for=\"item in books\" :key=\"item._id\" class=\"book-card\">\r\n            <div class=\"card\">\r\n              <img :src=\"item.picture_link\" class=\"card-img-top\" alt=\"Book cover image\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{{ item.title }}</h5>\r\n                <h6 class=\"card-subtitle mb-2 text-muted\">{{ item.author }}</h6>\r\n                <div class=\"card-genres\">\r\n                  <span v-for=\"(gen, index) in item.genres\" :key=\"index\" class=\"genre\">\r\n                    {{ gen }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button @click=\"reject(item._id)\">Reject</button>\r\n              <button @click=\"accept(item._id)\">Accept</button>\r\n              <button @click=\"inDb(item.title, item.author)\">Check if already in database</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <PrevPageNext\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        @pageChange=\"getAllBooks\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n    import { ref, onMounted, nextTick } from 'vue';\r\n  import PrevPageNext from '../components/PrevPageNext.vue';\r\n  import services from '../../services/services.js';\r\n  \r\n  export default {\r\n    components: {\r\n      PrevPageNext\r\n    },\r\n    setup() {\r\n      const books = ref([]);\r\n      const totalBooks = ref(0);\r\n      const totalPages = ref(0);\r\n      const currentPage = ref(1);\r\n      const loading = ref(true);\r\n      const limit = 15;\r\n  \r\n      const getAllBooks = async (page) => {\r\n        loading.value = true;\r\n        try {\r\n          const response = await services.getToBeAddedBooks(page, limit);\r\n          if (response.status !== 200) throw new Error('Network response was not ok');\r\n          const data = response.data;\r\n          books.value = data.books;\r\n          totalBooks.value = data.totalBooks;\r\n          totalPages.value = data.totalPages === 0 ? 1 : data.totalPages;\r\n          currentPage.value = data.currentPage;\r\n        } catch (error) {\r\n          console.error('Error fetching books:', error);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n  \r\n      const getBook = async (id) => {\r\n        const response = await services.getToBeAddedBook(id);\r\n        return response.data;\r\n      };\r\n  \r\n      const admitBook = async (book) => {\r\n        await services.acceptBook(book);\r\n      };\r\n  \r\n      const accept = async (id) => {\r\n        books.value = books.value.filter(item => item._id !== id);\r\n        totalBooks.value--;\r\n        totalPages.value = Math.ceil(totalBooks.value / limit);\r\n        await nextTick();\r\n  \r\n        if (books.value.length === 0 && currentPage.value > 1) {\r\n          currentPage.value--;\r\n          await getAllBooks(currentPage.value);\r\n        }\r\n  \r\n        try {\r\n          const book = await getBook(id);\r\n          await admitBook(book);\r\n        } catch (error) {\r\n          console.error('Error accepting book:', error);\r\n          await getAllBooks(currentPage.value);\r\n        }\r\n      };\r\n  \r\n      const reject = async (id) => {\r\n        books.value = books.value.filter(item => item._id !== id);\r\n        totalBooks.value--;\r\n        totalPages.value = Math.ceil(totalBooks.value / limit);\r\n        await nextTick();\r\n  \r\n        if (books.value.length === 0 && currentPage.value > 1) {\r\n          currentPage.value--;\r\n          await getAllBooks(currentPage.value);\r\n        }\r\n  \r\n        try {\r\n          const book = await getBook(id);\r\n          console.log(`Rejected book ${book.title}`);\r\n        } catch (error) {\r\n          console.error('Error accepting book:', error);\r\n          await getAllBooks(currentPage.value);\r\n        }\r\n      };\r\n      \r\n  \r\n      const inDb = async (title, author) => {\r\n        try{\r\n          const res = await services.isSameBook({\r\n            title: title,\r\n            author: author\r\n          });\r\n          if(res.data.exists){\r\n            alert('Book already exists in the DataBase!');\r\n          }\r\n          else{\r\n            alert('Book dose not exist in the DataBase!');\r\n          }\r\n        }\r\n        catch(err){\r\n          console.log(err.response.data.msg);\r\n        }\r\n        \r\n  \r\n      };\r\n  \r\n      onMounted(() => {\r\n        getAllBooks(currentPage.value);\r\n      });\r\n  \r\n      return {\r\n        books,\r\n        totalBooks,\r\n        totalPages,\r\n        currentPage,\r\n        loading,\r\n        getAllBooks,\r\n        accept,\r\n        reject,\r\n        inDb\r\n      };\r\n    }\r\n  };\r\n  \r\n  </script>\r\n  \r\n  <style lang=\"scss\">\r\n  .books {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 20px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .spinner {\r\n    flex: 1 1 100%;\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin: 20px;\r\n  }\r\n  \r\n  .book-card {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #f5f5f5;\r\n    border: 1px solid black;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .card-img-top {\r\n    width: 100%;\r\n    height: 40%; /* Adjust the height as needed */\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .card-body {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 18px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .card-subtitle {\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .card-genres {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 10px;\r\n    max-height: 50px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .genre {\r\n    margin: 2px;\r\n    padding: 5px 10px;\r\n    background-color: #eee;\r\n    border-radius: 5px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .pagination button {\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .pagination span {\r\n    font-size: 18px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAOWA,KAAK,EAAC;AAAO;;EAPxBC,GAAA;EAQ4BD,KAAK,EAAC;;;EARlCC,GAAA;AAAA;;EAWiBD,KAAK,EAAC;AAAM;mBAX7B;;EAamBA,KAAK,EAAC;AAAW;;EAChBA,KAAK,EAAC;AAAY;;EAClBA,KAAK,EAAC;AAA+B;;EACpCA,KAAK,EAAC;AAAa;oBAhBxC;oBAAA;oBAAA;;;uBACIE,mBAAA,CAmCM,cAlCJC,YAAA,CAIEC,uBAAA;IAHCC,WAAW,EAAEC,MAAA,CAAAD,WAAW;IACxBE,UAAU,EAAED,MAAA,CAAAC,UAAU;IACtBC,YAAU,EAAEF,MAAA,CAAAG;0EAEfC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBOL,MAAA,CAAAM,OAAO,I,cAAlBV,mBAAA,CAAoD,OAApDW,UAAoD,EAAhB,YAAU,M,cAC9CX,mBAAA,CAoBM,OA7BdY,UAAA,I,kBAUUZ,mBAAA,CAkBMa,SAAA,QA5BhBC,WAAA,CAU8BV,MAAA,CAAAW,KAAK,EAAbC,IAAI;yBAAhBhB,mBAAA,CAkBM;MAlBsBD,GAAG,EAAEiB,IAAI,CAACC,GAAG;MAAEnB,KAAK,EAAC;QAC/CU,mBAAA,CAWM,OAXNU,UAWM,GAVJV,mBAAA,CAA0E;MAApEW,GAAG,EAAEH,IAAI,CAACI,YAAY;MAAEtB,KAAK,EAAC,cAAc;MAACuB,GAAG,EAAC;4BAZrEC,UAAA,GAacd,mBAAA,CAQM,OARNe,UAQM,GAPJf,mBAAA,CAA4C,MAA5CgB,UAA4C,EAAAC,gBAAA,CAAlBT,IAAI,CAACU,KAAK,kBACpClB,mBAAA,CAAgE,MAAhEmB,UAAgE,EAAAF,gBAAA,CAAnBT,IAAI,CAACY,MAAM,kBACxDpB,mBAAA,CAIM,OAJNqB,UAIM,I,kBAHJ7B,mBAAA,CAEOa,SAAA,QAnBzBC,WAAA,CAiB+CE,IAAI,CAACc,MAAM,EAjB1D,CAiBgCC,GAAG,EAAEC,KAAK;2BAAxBhC,mBAAA,CAEO;QAFoCD,GAAG,EAAEiC,KAAK;QAAElC,KAAK,EAAC;0BACxDiC,GAAG;0CAKdvB,mBAAA,CAIM,cAHJA,mBAAA,CAAiD;MAAxCyB,OAAK,EAAAC,MAAA,IAAE9B,MAAA,CAAA+B,MAAM,CAACnB,IAAI,CAACC,GAAG;OAAG,QAAM,iBAxBtDmB,WAAA,GAyBc5B,mBAAA,CAAiD;MAAxCyB,OAAK,EAAAC,MAAA,IAAE9B,MAAA,CAAAiC,MAAM,CAACrB,IAAI,CAACC,GAAG;OAAG,QAAM,iBAzBtDqB,WAAA,GA0Bc9B,mBAAA,CAAoF;MAA3EyB,OAAK,EAAAC,MAAA,IAAE9B,MAAA,CAAAmC,IAAI,CAACvB,IAAI,CAACU,KAAK,EAAEV,IAAI,CAACY,MAAM;OAAG,8BAA4B,iBA1BzFY,WAAA,E;uCA+BMvC,YAAA,CAIEC,uBAAA;IAHCC,WAAW,EAAEC,MAAA,CAAAD,WAAW;IACxBE,UAAU,EAAED,MAAA,CAAAC,UAAU;IACtBC,YAAU,EAAEF,MAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}