{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = [\"innerHTML\"];\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"username\",\n    name: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.username = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.username]]), _hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"email\",\n    name: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.password = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.password]]), _hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.register && $setup.register(...args))\n  }, \"Register\"), $setup.err ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    style: {\n      \"color\": \"red\"\n    },\n    innerHTML: $setup.err\n  }, null, 8 /* PROPS */, _hoisted_4)) : _createCommentVNode(\"v-if\", true), $setup.succ ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, _toDisplayString($setup.succ), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","type","placeholder","name","_cache","$event","$setup","username","_hoisted_1","email","_hoisted_2","password","_hoisted_3","onClick","args","register","err","style","innerHTML","_hoisted_4","_createCommentVNode","succ","_hoisted_5","_toDisplayString"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <input type=\"text\" placeholder=\"username\" name=\"username\" v-model=\"username\" />\r\n      <br />\r\n      <input type=\"email\" placeholder=\"email\" name=\"email\" v-model=\"email\" />\r\n      <br />\r\n      <input type=\"password\" placeholder=\"password\" name=\"password\" v-model=\"password\" />\r\n      <br />\r\n      <button @click=\"register\">Register</button>\r\n      <p style=\"color: red;\" v-if=\"err\" v-html=\"err\"></p>\r\n      <p v-if=\"succ\">{{ succ }}</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { ref } from 'vue';\r\n  import { useRouter } from 'vue-router';\r\n  import services from '../../services/services.js';\r\n  \r\n  export default {\r\n    setup() {\r\n      const username = ref('');\r\n      const email = ref('');\r\n      const password = ref('');\r\n      const err = ref(null);\r\n      const succ = ref(null);\r\n      const router = useRouter();\r\n  \r\n      const register = async () => {\r\n        try {\r\n          const response = await services.register({\r\n            username: username.value,\r\n            email: email.value,\r\n            password: password.value\r\n          });\r\n          router.push({ name: 'home' });\r\n  \r\n          err.value = null;\r\n          succ.value = response.data.msg;\r\n        } catch (error) {\r\n          succ.value = null;\r\n          err.value = formatError(error.response.data.msg);\r\n        }\r\n      };\r\n  \r\n      const formatError = (errorMessage) => {\r\n        return errorMessage.replace(/\\n/g, '<br>');\r\n      };\r\n  \r\n      return {\r\n        username,\r\n        email,\r\n        password,\r\n        err,\r\n        succ,\r\n        register\r\n      };\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  </style>\r\n  "],"mappings":";gCAGMA,mBAAA,CAAM;gCAENA,mBAAA,CAAM;gCAENA,mBAAA,CAAM;mBAPZ;;EAAAC,GAAA;AAAA;;uBACIC,mBAAA,CAUM,c,gBATJF,mBAAA,CAA+E;IAAxEG,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;IAF/D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAEyEC,MAAA,CAAAC,QAAQ,GAAAF,MAAA;iDAARC,MAAA,CAAAC,QAAQ,E,GAC3EC,UAAM,E,gBACNV,mBAAA,CAAuE;IAAhEG,IAAI,EAAC,OAAO;IAACC,WAAW,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAJ1D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIoEC,MAAA,CAAAG,KAAK,GAAAJ,MAAA;iDAALC,MAAA,CAAAG,KAAK,E,GACnEC,UAAM,E,gBACNZ,mBAAA,CAAmF;IAA5EG,IAAI,EAAC,UAAU;IAACC,WAAW,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;IANnE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAM6EC,MAAA,CAAAK,QAAQ,GAAAN,MAAA;iDAARC,MAAA,CAAAK,QAAQ,E,GAC/EC,UAAM,EACNd,mBAAA,CAA2C;IAAlCe,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAER,MAAA,CAAAS,QAAA,IAAAT,MAAA,CAAAS,QAAA,IAAAD,IAAA,CAAQ;KAAE,UAAQ,GACLR,MAAA,CAAAU,GAAG,I,cAAhChB,mBAAA,CAAmD;IATzDD,GAAA;IASSkB,KAAmB,EAAnB;MAAA;IAAA,CAAmB;IAAYC,SAAY,EAAJZ,MAAA,CAAAU;0BAThDG,UAAA,KAAAC,mBAAA,gBAUed,MAAA,CAAAe,IAAI,I,cAAbrB,mBAAA,CAA6B,KAVnCsB,UAAA,EAAAC,gBAAA,CAUwBjB,MAAA,CAAAe,IAAI,oBAV5BD,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}