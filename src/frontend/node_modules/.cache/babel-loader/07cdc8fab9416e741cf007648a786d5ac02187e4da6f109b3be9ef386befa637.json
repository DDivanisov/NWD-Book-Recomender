{"ast":null,"code":"import { ref, onMounted, nextTick } from 'vue';\nimport PrevPageNext from '../components/PrevPageNext.vue';\nimport services from '../../services/services.js';\nexport default {\n  components: {\n    PrevPageNext\n  },\n  setup() {\n    const books = ref([]);\n    const totalBooks = ref(0);\n    const totalPages = ref(0);\n    const currentPage = ref(1);\n    const loading = ref(true);\n    const limit = 15;\n    const getAllBooks = async page => {\n      loading.value = true;\n      try {\n        const response = await services.getToBeAddedBooks(page, limit);\n        if (response.status !== 200) throw new Error('Network response was not ok');\n        const data = response.data;\n        books.value = data.books;\n        totalBooks.value = data.totalBooks;\n        totalPages.value = data.totalPages === 0 ? 1 : data.totalPages;\n        currentPage.value = data.currentPage;\n      } catch (error) {\n        console.error('Error fetching books:', error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const getBook = async id => {\n      const response = await services.getToBeAddedBook(id);\n      return response.data;\n    };\n    const admitBook = async book => {\n      await services.acceptBook(book);\n    };\n    const accept = async id => {\n      books.value = books.value.filter(item => item._id !== id);\n      totalBooks.value--;\n      totalPages.value = Math.ceil(totalBooks.value / limit);\n      await nextTick();\n      if (books.value.length === 0 && currentPage.value > 1) {\n        currentPage.value--;\n        await getAllBooks(currentPage.value);\n      }\n      try {\n        const book = await getBook(id);\n        await admitBook(book);\n      } catch (error) {\n        console.error('Error accepting book:', error);\n        await getAllBooks(currentPage.value);\n      }\n    };\n    const reject = async id => {\n      books.value = books.value.filter(item => item._id !== id);\n      totalBooks.value--;\n      totalPages.value = Math.ceil(totalBooks.value / limit);\n      await nextTick();\n      if (books.value.length === 0 && currentPage.value > 1) {\n        currentPage.value--;\n        await getAllBooks(currentPage.value);\n      }\n      try {\n        const book = await getBook(id);\n        console.log(`Rejected book ${book.title}`);\n      } catch (error) {\n        console.error('Error accepting book:', error);\n        await getAllBooks(currentPage.value);\n      }\n    };\n    const inDb = async (title, author) => {\n      try {\n        const res = await services.isSameBook({\n          title: title,\n          author: author\n        });\n        if (res.data.exists) {\n          alert('Book already exists in the DataBase!');\n        } else {\n          alert('Book dose not exist in the DataBase!');\n        }\n      } catch (err) {\n        console.log(err.response.data.msg);\n      }\n    };\n    onMounted(() => {\n      getAllBooks(currentPage.value);\n    });\n    return {\n      books,\n      totalBooks,\n      totalPages,\n      currentPage,\n      loading,\n      getAllBooks,\n      accept,\n      reject,\n      inDb\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","PrevPageNext","services","components","setup","books","totalBooks","totalPages","currentPage","loading","limit","getAllBooks","page","value","response","getToBeAddedBooks","status","Error","data","error","console","getBook","id","getToBeAddedBook","admitBook","book","acceptBook","accept","filter","item","_id","Math","ceil","length","reject","log","title","inDb","author","res","isSameBook","exists","alert","err","msg"],"sources":["C:\\Users\\mynig\\VScodium\\Book-Recommender\\frontend\\src\\views\\AcceptBooksView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <PrevPageNext\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        @pageChange=\"getAllBooks\"\r\n      />\r\n      <div class=\"books\">\r\n        <div v-if=\"loading\" class=\"spinner\">Loading...</div>\r\n        <div v-else>\r\n          <div v-for=\"item in books\" :key=\"item._id\" class=\"book-card\">\r\n            <div class=\"card\">\r\n              <img :src=\"item.picture_link\" class=\"card-img-top\" alt=\"Book cover image\">\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{{ item.title }}</h5>\r\n                <h6 class=\"card-subtitle mb-2 text-muted\">{{ item.author }}</h6>\r\n                <div class=\"card-genres\">\r\n                  <span v-for=\"(gen, index) in item.genres\" :key=\"index\" class=\"genre\">\r\n                    {{ gen }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <button @click=\"reject(item._id)\">Reject</button>\r\n              <button @click=\"accept(item._id)\">Accept</button>\r\n              <button @click=\"inDb(item.title, item.author)\">Check if already in database</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <PrevPageNext\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        @pageChange=\"getAllBooks\"\r\n      />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n    import { ref, onMounted, nextTick } from 'vue';\r\n  import PrevPageNext from '../components/PrevPageNext.vue';\r\n  import services from '../../services/services.js';\r\n  \r\n  export default {\r\n    components: {\r\n      PrevPageNext\r\n    },\r\n    setup() {\r\n      const books = ref([]);\r\n      const totalBooks = ref(0);\r\n      const totalPages = ref(0);\r\n      const currentPage = ref(1);\r\n      const loading = ref(true);\r\n      const limit = 15;\r\n  \r\n      const getAllBooks = async (page) => {\r\n        loading.value = true;\r\n        try {\r\n          const response = await services.getToBeAddedBooks(page, limit);\r\n          if (response.status !== 200) throw new Error('Network response was not ok');\r\n          const data = response.data;\r\n          books.value = data.books;\r\n          totalBooks.value = data.totalBooks;\r\n          totalPages.value = data.totalPages === 0 ? 1 : data.totalPages;\r\n          currentPage.value = data.currentPage;\r\n        } catch (error) {\r\n          console.error('Error fetching books:', error);\r\n        } finally {\r\n          loading.value = false;\r\n        }\r\n      };\r\n  \r\n      const getBook = async (id) => {\r\n        const response = await services.getToBeAddedBook(id);\r\n        return response.data;\r\n      };\r\n  \r\n      const admitBook = async (book) => {\r\n        await services.acceptBook(book);\r\n      };\r\n  \r\n      const accept = async (id) => {\r\n        books.value = books.value.filter(item => item._id !== id);\r\n        totalBooks.value--;\r\n        totalPages.value = Math.ceil(totalBooks.value / limit);\r\n        await nextTick();\r\n  \r\n        if (books.value.length === 0 && currentPage.value > 1) {\r\n          currentPage.value--;\r\n          await getAllBooks(currentPage.value);\r\n        }\r\n  \r\n        try {\r\n          const book = await getBook(id);\r\n          await admitBook(book);\r\n        } catch (error) {\r\n          console.error('Error accepting book:', error);\r\n          await getAllBooks(currentPage.value);\r\n        }\r\n      };\r\n  \r\n      const reject = async (id) => {\r\n        books.value = books.value.filter(item => item._id !== id);\r\n        totalBooks.value--;\r\n        totalPages.value = Math.ceil(totalBooks.value / limit);\r\n        await nextTick();\r\n  \r\n        if (books.value.length === 0 && currentPage.value > 1) {\r\n          currentPage.value--;\r\n          await getAllBooks(currentPage.value);\r\n        }\r\n  \r\n        try {\r\n          const book = await getBook(id);\r\n          console.log(`Rejected book ${book.title}`);\r\n        } catch (error) {\r\n          console.error('Error accepting book:', error);\r\n          await getAllBooks(currentPage.value);\r\n        }\r\n      };\r\n      \r\n  \r\n      const inDb = async (title, author) => {\r\n        try{\r\n          const res = await services.isSameBook({\r\n            title: title,\r\n            author: author\r\n          });\r\n          if(res.data.exists){\r\n            alert('Book already exists in the DataBase!');\r\n          }\r\n          else{\r\n            alert('Book dose not exist in the DataBase!');\r\n          }\r\n        }\r\n        catch(err){\r\n          console.log(err.response.data.msg);\r\n        }\r\n        \r\n  \r\n      };\r\n  \r\n      onMounted(() => {\r\n        getAllBooks(currentPage.value);\r\n      });\r\n  \r\n      return {\r\n        books,\r\n        totalBooks,\r\n        totalPages,\r\n        currentPage,\r\n        loading,\r\n        getAllBooks,\r\n        accept,\r\n        reject,\r\n        inDb\r\n      };\r\n    }\r\n  };\r\n  \r\n  </script>\r\n  \r\n  <style lang=\"scss\">\r\n  .books {\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 20px;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .spinner {\r\n    flex: 1 1 100%;\r\n    text-align: center;\r\n    font-size: 24px;\r\n    margin: 20px;\r\n  }\r\n  \r\n  .book-card {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #f5f5f5;\r\n    border: 1px solid black;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .card-img-top {\r\n    width: 100%;\r\n    height: 40%; /* Adjust the height as needed */\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .card-body {\r\n    padding: 20px;\r\n  }\r\n  \r\n  .card-title {\r\n    font-size: 18px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .card-subtitle {\r\n    font-size: 16px;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .card-genres {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    margin-top: 10px;\r\n    max-height: 50px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .genre {\r\n    margin: 2px;\r\n    padding: 5px 10px;\r\n    background-color: #eee;\r\n    border-radius: 5px;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 10px;\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  .pagination button {\r\n    padding: 10px 20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .pagination span {\r\n    font-size: 18px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}